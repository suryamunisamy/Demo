/**
 * Name: hsdk-renderer-wa3
 * Description: HSDK WA3 Renderer is a renderer specifically designed to render HSDK App Shell with an Angular SPA (Single Page Application) based on WA3 (Widget Architecture 3)
 * Version: 1.10.0
 * SHA-1: 108fbd08db2d45beddcc7bb59e2c59552da947b2
 */
(function(){"use strict";const makeError=componentName=>message=>new Error(`[${componentName}] ${message}`);const makeTypeError=componentName=>message=>new Error(`[${componentName}] ${message}`);const createError=makeError("hsdk-renderer-wa3");const createTypeError=makeTypeError("hsdk-renderer-wa3");const globalContext=typeof global!=="undefined"?global:window;const getHSDKCore=()=>globalContext["hsdk-core"]||globalContext["mobile-sdk-web"];const getBBNamespace=()=>{globalContext.BB=globalContext.BB||{};return globalContext.BB};const isArray=Array.isArray;const isFunction=testValue=>typeof testValue==="function";const isObject=testValue=>testValue!==null&&typeof testValue==="object"&&!isArray(testValue);const createBackbaseConfig=mobileConfig=>{const{apiRoot:apiRoot,portalName:portalName,staticResourcesRoot:staticResourcesRoot,version:version}=mobileConfig;const cspNonce="";const currentLinkUUID="";const currentLink="";const designmode="false";const locale="";const locales="";const linkRoot="";const pageName="";const userId="";return{apiRoot:apiRoot,staticResourcesRoot:staticResourcesRoot,portalName:portalName,pageName:pageName,designmode:designmode,currentLinkUUID:currentLinkUUID,currentLink:currentLink,locale:locale,locales:locales,linkRoot:linkRoot,cspNonce:cspNonce,userId:userId,version:version}};const NATIVE_RENDERER_NAME="BBWebAppRenderer";const isWA3Page=page=>Boolean(page.preferences&&page.preferences.native===NATIVE_RENDERER_NAME);const toWA3Item=item=>Object.assign({},item.children?{children:item.children.map(child=>toWA3Item(child))}:{},{name:item.name,properties:Object.assign({},item.preferences)});const getPageModel=mbaasPortalModel=>mbaasPortalModel.pages.filter(page=>isWA3Page(page))[0];const isPortalModel=mbaasModel=>mbaasModel&&{}.hasOwnProperty.call(mbaasModel,"pages");const toWA3AppModel=mbaasPageModel=>{const appModel=mbaasPageModel.children[0];return{children:appModel.children.map(item=>toWA3Item(item)),name:appModel.name,properties:Object.assign({},appModel.preferences)}};const documentReady=()=>new Promise((resolve,reject)=>{if(globalContext.document.readyState==="loading"){globalContext.document.addEventListener("DOMContentLoaded",()=>{resolve()})}else{resolve()}});const createMessage=(errorPrefix,message)=>`${errorPrefix}: Invalid page model: ${message}`;const pageNotFoundError=errorPrefix=>createError(`${errorPrefix}: Could not find any HSDK pages in the provided portal model. `+`Make sure there is at least one page in the portal that `+`has property native=${NATIVE_RENDERER_NAME}.`);const throwIfAlreadyTriggered=isRenderTriggered=>{if(isRenderTriggered){throw createError(`The renderItem() method must to be called only once. `+`But actually this method has been called by Mobile SDK more than 1 time. `+`Likely there is an issue in native code.`)}};const throwIfInvalidMBAASPage=(errorPrefix,pageModel)=>{if(!isObject(pageModel)){throw createTypeError(createMessage(errorPrefix,`No page model was provided`))}if(!isArray(pageModel.children)){throw createTypeError(createMessage(errorPrefix,`The page model does not have children`))}if(!pageModel.id){throw createTypeError(createMessage(errorPrefix,`The page model does not have a specified id`))}if(!pageModel.name){throw createTypeError(createMessage(errorPrefix,`The page model does not have a specified name`))}if(!isObject(pageModel.preferences)){throw createTypeError(createMessage(errorPrefix,`The page model does not have preferences`))}};const throwIfInvalidWA3Application=errorPrefix=>{if(!isFunction(getBBNamespace().startSingleApp)){throw createError(`${errorPrefix}: "window.BB.startSingleApp" is not a function`)}};const createRenderer=mobileConfig=>{const name="hsdk-renderer-wa3";let isRenderTriggered=false;const bbNamespace=getBBNamespace();const bbConfig=createBackbaseConfig(mobileConfig);bbNamespace.config=bbConfig;const renderItem=model=>documentReady().then(()=>{const errorPrefix="Unable to start the application";const getPageModelOrThrow=portalModel=>{const page=getPageModel(portalModel);if(!page){throw pageNotFoundError(errorPrefix)}return page};const pageModel=isPortalModel(model)?getPageModelOrThrow(model):model;throwIfInvalidMBAASPage(errorPrefix,pageModel);throwIfInvalidWA3Application(errorPrefix);throwIfAlreadyTriggered(isRenderTriggered);isRenderTriggered=true;bbConfig.locale=pageModel.preferences.locale||"";bbConfig.pageName=pageModel.name;const wa3AppModel=toWA3AppModel(pageModel);return getBBNamespace().startSingleApp().then(wa3Application=>wa3Application.bootstrap(wa3AppModel))});return{name:name,renderItem:renderItem}};const setRenderer=()=>{if(!isObject(getHSDKCore())){throw createError(`Unable to set the renderer: HSDK Core is not available on the window`)}getHSDKCore().setRenderer(createRenderer)};setRenderer()})();
