// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.4.2 (swiftlang-1205.0.28.2 clang-1205.0.19.57)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BackbaseAnimation
@_exported import BackbaseAnimation
import Foundation
import Swift
import UIKit
public struct AnimationEnvironment {
  public let traitsCollection: UIKit.UITraitCollection?
  public init(traitsCollection: UIKit.UITraitCollection?)
}
public enum AnimationSource {
  case bundle((BackbaseAnimation.AnimationEnvironment?) -> BackbaseAnimation.InBundleAnimation)
}
public protocol AnimationView : UIKit.UIView {
  func load(from animationSource: BackbaseAnimation.AnimationSource) throws
  func start()
  func stop()
}
public enum AnimationViewError : Swift.Error, Swift.Equatable {
  case fileNotFound
  case unknownAnimationSource
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: BackbaseAnimation.AnimationViewError, b: BackbaseAnimation.AnimationViewError) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
public protocol AnimationViewFactory {
  static func view() -> BackbaseAnimation.AnimationView
}
public struct InBundleAnimation {
  public let resourceName: Swift.String
  public let bundle: Foundation.Bundle
  public init(resourceName: Swift.String, in bundle: Foundation.Bundle)
}
extension BackbaseAnimation.AnimationViewError : Swift.Hashable {}
