import { InitialTransitionContext, TransitionContext } from '../../../types';
import { ViewInstanceId } from '../../views/view-instance/view-instance.interface';
import { ViewId } from '../../views/view/view.interface';
import { NavigationLayoutRenderTreeData } from '../navigation-layout-render-tree/navigation-layout-render-tree.interface';
import { NavigationLayoutController } from './navigation-layout-controller/navigation-layout.controller.interface';
export interface NavigationLayoutOptions {
}
export interface TransitionContext {
    origin: string;
    target: string;
}
export interface InitialTransitionContext {
    target: string;
}
export declare type Transition = (transitionContext: TransitionContext) => Promise<void>;
export declare type InitialTransition = (transitionContext: InitialTransitionContext) => Promise<void>;
export declare type NavigationLayoutFactory = (layoutOptions: NavigationLayoutOptions, initialViewId?: ViewId) => NavigationLayout;
export interface NavigationLayout {
    getActiveViewInstance: () => ViewInstanceId | null;
    getController: () => NavigationLayoutController;
    getChildLayoutById: (layoutId: string) => NavigationLayout | null;
    getChildLayoutByViewInstance: (viewInstanceId: ViewInstanceId) => NavigationLayout | null;
    getId: () => string;
    getLayoutPathToViewInstance: (viewInstanceId: ViewInstanceId) => Array<string>;
    getName: () => string;
    getRenderTree: () => NavigationLayoutRenderTreeData;
    hasViewInstance: (viewInstanceId: ViewInstanceId) => boolean;
}
