/**
 * Name: hsdk-app-shell
 * Description: HSDK App Shell implements a generic application shell that can be used in hybrid mobile applications
 * Version: 1.10.0
 * SHA-1: 02a68a1d0e81e2d4fcf4766ba5efc009ba7aa4cc
 */
(function(exports){"use strict";var createAPI=function(api){var result=Object.create(null);Object.defineProperties(result,Object.getOwnPropertyDescriptors(api));return result};var createErrorFactory=function(componentName){return function(message){return new Error("["+componentName+"] "+message)}};var createTypeErrorFactory=function(componentName){return function(message){return new TypeError("["+componentName+"] "+message)}};var isArray=function(arg){return Array.isArray(arg)};var isFunction=function(arg){return typeof arg==="function"};var isString=function(arg){return typeof arg==="string"};var createTypeError=createTypeErrorFactory("event-emitter");var throwIfInvalidEventListener=function(errorPrefix,eventListener){if(!isFunction(eventListener)){throw createTypeError(errorPrefix+": "+("Expected the event listener to be a function, but got '"+eventListener+"'"))}};var throwIfInvalidEventName=function(errorPrefix,eventName){if(!isString(eventName)){throw createTypeError(errorPrefix+": "+("Expected the name of the event to be a string, but got '"+eventName+"'"))}if(eventName.trim().length<1){throw createTypeError(errorPrefix+": The name of the event must contain at least 1 character")}};var createEventEmitter=function(instanceName){var all=new Map;var name=instanceName.toString();var getOrCreateListeners=function(eventName){var listeners=all.get(eventName);if(!listeners){listeners=[];all.set(eventName,listeners)}return listeners};var emit=function(eventName,payload){throwIfInvalidEventName("Could not emit the event",eventName);var listeners=all.get(eventName);if(listeners){listeners.slice().forEach((function(listener){listener(payload)}))}};var off=function(eventName,eventListener){var errorPrefix="Could not unsubscribe from the event";throwIfInvalidEventName(errorPrefix,eventName);throwIfInvalidEventListener(errorPrefix,eventListener);var listeners=all.get(eventName);if(listeners){var idx=listeners.indexOf(eventListener);if(idx!==-1){listeners.splice(idx,1)}}};var on=function(eventName,eventListener){var errorPrefix="Could not subscribe to the event";throwIfInvalidEventName(errorPrefix,eventName);throwIfInvalidEventListener(errorPrefix,eventListener);var listeners=getOrCreateListeners(eventName);listeners.push(eventListener)};return createAPI({emit:emit,name:name,off:off,on:on})};var generateUid=function(){return"xxxxxxxx".replace(/[x]/g,(function(){var r=Math.random()*16|0;return r.toString(16)}))};function __awaiter(thisArg,_arguments,P,generator){function adopt(value){return value instanceof P?value:new P((function(resolve){resolve(value)}))}return new(P||(P=Promise))((function(resolve,reject){function fulfilled(value){try{step(generator.next(value))}catch(e){reject(e)}}function rejected(value){try{step(generator["throw"](value))}catch(e){reject(e)}}function step(result){result.done?resolve(result.value):adopt(result.value).then(fulfilled,rejected)}step((generator=generator.apply(thisArg,_arguments||[])).next())}))}function __generator(thisArg,body){var _={label:0,sent:function(){if(t[0]&1)throw t[1];return t[1]},trys:[],ops:[]},f,y,t,g;return g={next:verb(0),throw:verb(1),return:verb(2)},typeof Symbol==="function"&&(g[Symbol.iterator]=function(){return this}),g;function verb(n){return function(v){return step([n,v])}}function step(op){if(f)throw new TypeError("Generator is already executing.");while(_)try{if(f=1,y&&(t=op[0]&2?y["return"]:op[0]?y["throw"]||((t=y["return"])&&t.call(y),0):y.next)&&!(t=t.call(y,op[1])).done)return t;if(y=0,t)op=[op[0]&2,t.value];switch(op[0]){case 0:case 1:t=op;break;case 4:_.label++;return{value:op[1],done:false};case 5:_.label++;y=op[1];op=[0];continue;case 7:op=_.ops.pop();_.trys.pop();continue;default:if(!(t=_.trys,t=t.length>0&&t[t.length-1])&&(op[0]===6||op[0]===2)){_=0;continue}if(op[0]===3&&(!t||op[1]>t[0]&&op[1]<t[3])){_.label=op[1];break}if(op[0]===6&&_.label<t[1]){_.label=t[1];t=op;break}if(t&&_.label<t[2]){_.label=t[2];_.ops.push(op);break}if(t[2])_.ops.pop();_.trys.pop();continue}op=body.call(thisArg,_)}catch(e){op=[6,e];y=0}finally{f=t=0}if(op[0]&5)throw op[1];return{value:op[0]?op[1]:void 0,done:true}}}var NavigationProgress;(function(NavigationProgress){NavigationProgress["AfterNavigate"]="afterNavigate";NavigationProgress["AfterTransitionEnd"]="afterTransitionEnd";NavigationProgress["BeforeNavigate"]="beforeNavigate";NavigationProgress["BeforeTransitionStart"]="beforeTransitionStart"})(NavigationProgress||(NavigationProgress={}));(function(NavigationResultStatus){NavigationResultStatus["Canceled"]="canceled";NavigationResultStatus["Complete"]="complete";NavigationResultStatus["Failed"]="failed"})(exports.NavigationResultStatus||(exports.NavigationResultStatus={}));var createError=createErrorFactory("menu-navigation-layout.controller");var createInvalidMenuItemError=function(errorPrefix,uri){return createError(errorPrefix+': There is no menu item with URI "'+uri+'".')};var ConnectedMenuNavigationLayoutController=function(){function ConnectedMenuNavigationLayoutController(navigationPipeline,layoutId,layoutState){var _this=this;this.navigationPipeline=navigationPipeline;this.layoutId=layoutId;this.layoutState=layoutState;this.defaultTransition=function(){return __awaiter(_this,void 0,void 0,(function(){return __generator(this,(function(_a){console.warn("[menu-layout.controller] Transitions are not configured");return[2]}))}))};this.transitionsValue=null}Object.defineProperty(ConnectedMenuNavigationLayoutController.prototype,"activeMenuItem",{get:function(){return this.layoutState.activeMenuItem.uri},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutController.prototype,"activeStack",{get:function(){return this.layoutState.activeStack.getController()},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutController.prototype,"id",{get:function(){return this.layoutId},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutController.prototype,"menuItems",{get:function(){return this.layoutState.menuItems.map((function(menuItem){return menuItem.uri}))},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutController.prototype,"transitions",{get:function(){return this.transitionsValue},set:function(transitionsToSet){this.transitionsValue=transitionsToSet},enumerable:true,configurable:true});ConnectedMenuNavigationLayoutController.prototype.select=function(targetURI){var _this=this;var errorPrefix="Could not change the active stack";var menuItems=this.layoutState.menuItems;var targetView=menuItems.find((function(menuItem){return menuItem.uri===targetURI}));if(!targetView){throw createInvalidMenuItemError(errorPrefix,targetURI)}var targetViewId=targetView.id;var targetViewIndex=menuItems.indexOf(targetView);if(targetViewIndex===this.layoutState.activeStackIndex){return Promise.resolve({status:exports.NavigationResultStatus.Complete})}var originViewInstanceId=this.layoutState.activeViewInstance;var updateStateFunction=function(){_this.layoutState.activeStackIndex=targetViewIndex;return _this.layoutState.activeViewInstance};return this.navigationPipeline.performNavigation(originViewInstanceId,targetViewId,updateStateFunction,this.transitionFor("select"))};ConnectedMenuNavigationLayoutController.prototype.transitionFor=function(name){var transitions=this.transitions;return transitions?function(transitionContext){return transitions[name](transitionContext)}:this.defaultTransition};return ConnectedMenuNavigationLayoutController}();var MENU_NAVIGATION_LAYOUT_NAME="MenuNavigationLayout";var validateViewInstanceId=function(viewInstanceId){if(!isString(viewInstanceId)){return["Expected the view reference to be of type string, "+('but "'+typeof viewInstanceId+'" was given')]}if(!viewInstanceId.trim()){return["Expected the view reference to be a string of at least one character"]}return[]};var createTypeError$1=createTypeErrorFactory("menu-navigation-layout");var createViewNotFoundByURIError=function(errorPrefix,viewURI){return createTypeError$1(errorPrefix+': Could not find the view by provided URI "'+viewURI+'". '+"Make sure you provide correct URIs in menu items")};var throwIfInvalidLayoutOptions=function(errorPrefix,layoutOptions){if(!isArray(layoutOptions.menuItems)){throw createTypeError$1(errorPrefix+": The 'menuItems' parameter is required. "+"Make sure you provide an array of menu items in the "+"'layoutOptions' when you add 'MenuNavigationLayout'")}};var throwIfInvalidViewInstanceId=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$1(errorPrefix+": "+errors[0])}};var ConnectedMenuNavigationLayoutRenderState=function(){function ConnectedMenuNavigationLayoutRenderState(layoutId,layoutState){this.layoutId=layoutId;this.layoutState=layoutState}Object.defineProperty(ConnectedMenuNavigationLayoutRenderState.prototype,"renderTree",{get:function(){var id=this.layoutId;var name=MENU_NAVIGATION_LAYOUT_NAME;var active=this.layoutState.activeStackIndex;var stacks=this.layoutState.stacks;var tree={active:active,stacks:stacks.map((function(childStack){return childStack.getRenderTree()}))};return{id:id,name:name,tree:tree}},enumerable:true,configurable:true});return ConnectedMenuNavigationLayoutRenderState}();var ConnectedMenuNavigationLayoutState=function(){function ConnectedMenuNavigationLayoutState(stackNavigationLayoutFactory,menuItemsValue){var _this=this;this.stackNavigationLayoutFactory=stackNavigationLayoutFactory;this.menuItemsValue=menuItemsValue;this.activeStackIndexValue=0;this.stacksValue=this.menuItemsValue.map((function(view){return _this.stackNavigationLayoutFactory({},view.id)}))}Object.defineProperty(ConnectedMenuNavigationLayoutState.prototype,"activeStackIndex",{get:function(){return this.activeStackIndexValue},set:function(stackIndex){this.activeStackIndexValue=stackIndex},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutState.prototype,"activeStack",{get:function(){return this.stacks[this.activeStackIndex]},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutState.prototype,"activeMenuItem",{get:function(){return this.menuItemsValue[this.activeStackIndex]},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutState.prototype,"activeViewInstance",{get:function(){return this.activeStack.getActiveViewInstance()},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutState.prototype,"menuItems",{get:function(){return this.menuItemsValue.slice()},enumerable:true,configurable:true});Object.defineProperty(ConnectedMenuNavigationLayoutState.prototype,"stacks",{get:function(){return this.stacksValue},enumerable:true,configurable:true});return ConnectedMenuNavigationLayoutState}();var makeMenuNavigationLayout=function(navigationPipeline,stackNavigationLayoutFactory,viewRegistry){return function(layoutOptions){var layoutErrorPrefix="Could not create a menu layout";var menuLayoutOptions=layoutOptions;throwIfInvalidLayoutOptions(layoutErrorPrefix,menuLayoutOptions);var menuItems=menuLayoutOptions.menuItems.map((function(viewURI){var view=viewRegistry.getViewByURI(viewURI);if(!view){throw createViewNotFoundByURIError(layoutErrorPrefix,viewURI)}return view}));var layoutId="menu-layout-"+generateUid();var layoutState=new ConnectedMenuNavigationLayoutState(stackNavigationLayoutFactory,menuItems);var layoutRenderState=new ConnectedMenuNavigationLayoutRenderState(layoutId,layoutState);var layoutController=new ConnectedMenuNavigationLayoutController(navigationPipeline,layoutId,layoutState);var getActiveViewInstance=function(){return layoutState.activeViewInstance};var getChildLayoutById=function(id){var stacks=layoutState.stacks;var stack=stacks.find((function(childStack){return childStack.getId()===id}));return stack||null};var getChildLayoutByViewInstance=function(viewInstanceId){return layoutState.stacks.find((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))||null};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId("Could not get the path to the given view",viewInstanceId);var stackLayout=getChildLayoutByViewInstance(viewInstanceId);if(!stackLayout){return[]}return[layoutId,stackLayout.getId()]};var getName=function(){return MENU_NAVIGATION_LAYOUT_NAME};var getRenderTree=function(){return layoutRenderState.renderTree};var hasViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId("Could not check if the stack has the view",viewInstanceId);return layoutState.stacks.some((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))};return createAPI({getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,hasViewInstance:hasViewInstance})}};var toViewInstanceId=function(viewInstanceId){return viewInstanceId};var createError$1=createErrorFactory("modals-navigation-layout.controller");var viewNotFoundError=function(errorPrefix,viewURI){return createError$1(errorPrefix+': Could not find the view by URI: "'+viewURI+'"')};var throwIfStackNotFound=function(errorPrefix,stackIndex,stackId){if(stackIndex===-1){throw createError$1(errorPrefix+': There is no navigation stack with id "'+stackId+'" found.')}};var ConnectedModalsNavigationLayoutController=function(){function ConnectedModalsNavigationLayoutController(navigationPipeline,viewRegistry,layoutId,layoutState){var _this=this;this.navigationPipeline=navigationPipeline;this.viewRegistry=viewRegistry;this.layoutId=layoutId;this.layoutState=layoutState;this.defaultTransition=function(){return __awaiter(_this,void 0,void 0,(function(){return __generator(this,(function(_a){console.warn("[modals-layout.controller] Transitions are not configured");return[2]}))}))};this.transitionsValue=null}ConnectedModalsNavigationLayoutController.prototype.dismiss=function(stackId){var _this=this;var errorPrefix="Could not close the modal stack";throwIfStackNotFound(errorPrefix,this.layoutState.stackIndex(stackId),stackId);var originViewInstance=this.layoutState.activeViewInstance;var updateStateFunction=function(){return _this.layoutState.removeStack(stackId)};return this.navigationPipeline.performNavigation(originViewInstance,null,updateStateFunction,this.transitionFor("dismiss"))};Object.defineProperty(ConnectedModalsNavigationLayoutController.prototype,"activeStack",{get:function(){var stacks=this.layoutState.stacks;var stack=stacks.length?stacks[stacks.length-1]:null;return stack?stack.getId():null},enumerable:true,configurable:true});Object.defineProperty(ConnectedModalsNavigationLayoutController.prototype,"size",{get:function(){return this.layoutState.stacks.length},enumerable:true,configurable:true});ConnectedModalsNavigationLayoutController.prototype.open=function(origin,targetURI){var _this=this;var errorPrefix="Could not open a modal stack";var originViewInstanceId=toViewInstanceId(origin);var targetView=this.viewByURI(targetURI,errorPrefix);var updateStateFunction=function(){return _this.layoutState.appendStack(targetView.id)};return this.navigationPipeline.performNavigation(originViewInstanceId,targetView.id,updateStateFunction,this.transitionFor("open"))};Object.defineProperty(ConnectedModalsNavigationLayoutController.prototype,"id",{get:function(){return this.layoutId},enumerable:true,configurable:true});Object.defineProperty(ConnectedModalsNavigationLayoutController.prototype,"transitions",{get:function(){return this.transitionsValue},set:function(transitionsToSet){this.transitionsValue=transitionsToSet},enumerable:true,configurable:true});ConnectedModalsNavigationLayoutController.prototype.transitionFor=function(name){var transitions=this.transitions;return transitions?function(transitionContext){return transitions[name](transitionContext)}:this.defaultTransition};ConnectedModalsNavigationLayoutController.prototype.viewByURI=function(viewURI,errorPrefix){var view=this.viewRegistry.getViewByURI(viewURI);if(view){return view}throw viewNotFoundError(errorPrefix,viewURI)};return ConnectedModalsNavigationLayoutController}();var MODALS_NAVIGATION_LAYOUT_NAME="ModalsNavigationLayout";var validateViewId=function(viewId){if(!isString(viewId)){return["Expected the view id to be of type string, "+('but "'+typeof viewId+'" was given')]}if(!viewId.trim()){return["Expected the view id reference to be a string of at least one character"]}return[]};var validateViewURI=function(viewURI,viewId){if(!isString(viewURI)){return['Invalid view URI: Expected the URI of view "'+viewId+'" to be of type string, '+('but "'+typeof viewURI+'" was given')]}return[]};var createTypeError$2=createTypeErrorFactory("menu-navigation-layout");var throwIfInvalidInitialView=function(errorPrefix,viewId){if(viewId!==undefined){var errors=validateViewId(viewId);if(errors.length>0){throw createTypeError$2(errorPrefix+": The given initial view is invalid: "+errors[0])}}};var throwIfInvalidViewInstanceId$1=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$2(errorPrefix+": "+errors[0])}};var ModalsNavigationLayoutStateEvent;(function(ModalsNavigationLayoutStateEvent){ModalsNavigationLayoutStateEvent["AfterStateChanged"]="AfterStateChanged"})(ModalsNavigationLayoutStateEvent||(ModalsNavigationLayoutStateEvent={}));var ConnectedModalsNavigationLayoutRenderState=function(){function ConnectedModalsNavigationLayoutRenderState(layoutId,layoutState){var _this=this;this.layoutId=layoutId;this.layoutState=layoutState;this.stacksToRender=this.layoutState.stacks.slice();var handleLayoutStateChange=function(payload){var _a;(_a=_this.stacksToRender).push.apply(_a,payload.added)};this.layoutState.on(ModalsNavigationLayoutStateEvent.AfterStateChanged,handleLayoutStateChange)}Object.defineProperty(ConnectedModalsNavigationLayoutRenderState.prototype,"renderTree",{get:function(){var id=this.layoutId;var name=MODALS_NAVIGATION_LAYOUT_NAME;this.stacksToRender=this.stacksToRender.filter((function(stackToRender){return stackToRender.getRenderTree().tree.views.length}));var tree={stacks:this.stacksToRender.map((function(childStack){return childStack.getRenderTree()}))};return{id:id,name:name,tree:tree}},enumerable:true,configurable:true});return ConnectedModalsNavigationLayoutRenderState}();var ConnectedModalsNavigationLayoutState=function(){function ConnectedModalsNavigationLayoutState(stackNavigationLayoutFactory,initialViewId){this.stackNavigationLayoutFactory=stackNavigationLayoutFactory;this.eventEmitter=createEventEmitter("modals-navigation-layout-state");this.stacksValue=[];if(initialViewId){this.stacks.push(stackNavigationLayoutFactory({},initialViewId))}}Object.defineProperty(ConnectedModalsNavigationLayoutState.prototype,"activeStack",{get:function(){return this.stacks[this.stacks.length-1]||null},enumerable:true,configurable:true});Object.defineProperty(ConnectedModalsNavigationLayoutState.prototype,"activeViewInstance",{get:function(){var activeStack=this.activeStack;return activeStack?activeStack.getActiveViewInstance():null},enumerable:true,configurable:true});Object.defineProperty(ConnectedModalsNavigationLayoutState.prototype,"stacks",{get:function(){return this.stacksValue},enumerable:true,configurable:true});ConnectedModalsNavigationLayoutState.prototype.appendStack=function(target){var stack=this.stackNavigationLayoutFactory({},target);this.stacks.push(stack);this.publishStateChange([stack],[]);return stack.getRootView()};ConnectedModalsNavigationLayoutState.prototype.stackIndex=function(stackId){return this.stacks.findIndex((function(stack){return stack.getId()===stackId}))};ConnectedModalsNavigationLayoutState.prototype.on=function(eventName,eventListener){this.eventEmitter.on(eventName,eventListener)};ConnectedModalsNavigationLayoutState.prototype.removeStack=function(stackId){var stackIndex=this.stackIndex(stackId);var stack=this.stacks[stackIndex];var previousStackIndex=stackIndex-1;var previousStack=this.stacks[previousStackIndex]||null;stack.clear();this.stacks.splice(stackIndex,1);this.publishStateChange([],[stack]);return previousStack?previousStack.getActiveViewInstance():null};ConnectedModalsNavigationLayoutState.prototype.publishStateChange=function(added,removed){var payload={added:added,removed:removed};this.eventEmitter.emit(ModalsNavigationLayoutStateEvent.AfterStateChanged,payload)};return ConnectedModalsNavigationLayoutState}();var makeModalsNavigationLayout=function(navigationPipeline,stackNavigationLayoutFactory,viewRegistry){return function(layoutOptions,initialViewId){var layoutErrorPrefix="Could not create a modals layout";throwIfInvalidInitialView(layoutErrorPrefix,initialViewId);var layoutId="modals-layout-"+generateUid();var layoutState=new ConnectedModalsNavigationLayoutState(stackNavigationLayoutFactory,initialViewId);var layoutRenderState=new ConnectedModalsNavigationLayoutRenderState(layoutId,layoutState);var layoutController=new ConnectedModalsNavigationLayoutController(navigationPipeline,viewRegistry,layoutId,layoutState);var getActiveViewInstance=function(){return layoutState.activeViewInstance};var getChildLayoutById=function(id){return layoutState.stacks.find((function(childStack){return childStack.getId()===id}))||null};var getChildLayoutByViewInstance=function(viewInstanceId){return layoutState.stacks.find((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))||null};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$1("Could not get the path to the given view",viewInstanceId);var stackLayout=getChildLayoutByViewInstance(viewInstanceId);if(!stackLayout){return[]}return[layoutId,stackLayout.getId()]};var getName=function(){return MODALS_NAVIGATION_LAYOUT_NAME};var getRenderTree=function(){return layoutRenderState.renderTree};var getSnapshot=function(){return layoutState.stacks.map((function(childStack){return childStack.getSnapshot()}))};var hasViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$1("Could not check if the stack has the view",viewInstanceId);return layoutState.stacks.some((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))};return createAPI({getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,getSnapshot:getSnapshot,hasViewInstance:hasViewInstance})}};var createError$2=createErrorFactory("stack-navigation-layout.controller");var viewNotFoundError$1=function(errorPrefix,viewURI){return createError$2(errorPrefix+': Could not find the view by URI: "'+viewURI+'"')};var viewNotInStackError=function(errorPrefix){return createError$2(errorPrefix+": The target view does not belong to the stack")};var throwIfCannotNavigateBack=function(errorPrefix,size){if(size<=1){throw createError$2(errorPrefix+": The stack must have more than one view")}};var throwIfReplaceTheSameView=function(errorPrefix,viewA,viewB){if(viewA===viewB){throw createError$2(errorPrefix+": The target view and the last view in the stack "+('are the same view: "'+viewA+'"'))}};var ConnectedStackNavigationLayoutController=function(){function ConnectedStackNavigationLayoutController(navigationPipeline,viewRegistry,viewInstanceRegistry,layoutId,layoutState){var _this=this;this.navigationPipeline=navigationPipeline;this.viewRegistry=viewRegistry;this.viewInstanceRegistry=viewInstanceRegistry;this.layoutId=layoutId;this.layoutState=layoutState;this.defaultTransition=function(){return __awaiter(_this,void 0,void 0,(function(){return __generator(this,(function(_a){console.warn("[stack-layout.controller] Transitions are not configured");return[2]}))}))};this.viewInstanceRegistryClient=this.viewInstanceRegistry.createClient("stack-layout-controller");this.transitionsValue=null}ConnectedStackNavigationLayoutController.prototype.canGoBack=function(){return this.layoutState.viewInstances.length>1};Object.defineProperty(ConnectedStackNavigationLayoutController.prototype,"activeView",{get:function(){var activeViewInstanceId=this.activeViewInstance;return activeViewInstanceId?this.viewInstanceRegistryClient.getViewIdByViewInstance(activeViewInstanceId):null},enumerable:true,configurable:true});Object.defineProperty(ConnectedStackNavigationLayoutController.prototype,"activeViewInstance",{get:function(){return this.layoutState.activeViewInstance},enumerable:true,configurable:true});Object.defineProperty(ConnectedStackNavigationLayoutController.prototype,"id",{get:function(){return this.layoutId},enumerable:true,configurable:true});Object.defineProperty(ConnectedStackNavigationLayoutController.prototype,"size",{get:function(){return this.layoutState.viewInstances.length},enumerable:true,configurable:true});Object.defineProperty(ConnectedStackNavigationLayoutController.prototype,"views",{get:function(){return this.layoutState.viewInstances.slice()},enumerable:true,configurable:true});ConnectedStackNavigationLayoutController.prototype.back=function(targetURI){var _this=this;var errorPrefix="Could not navigate back";throwIfCannotNavigateBack(errorPrefix,this.size);var targetIndex=targetURI?this.layoutState.viewIndex(this.viewByURI(targetURI,errorPrefix).id):this.size-2;var targetView=this.viewByIndex(targetIndex,errorPrefix);var originViewInstanceId=this.layoutState.activeViewInstance;var updateStateFunction=function(){return _this.layoutState.removeAllViewsAfter(targetView.id)};return this.navigationPipeline.performNavigation(originViewInstanceId,targetView.id,updateStateFunction,this.transitionFor("back"))};ConnectedStackNavigationLayoutController.prototype.forward=function(targetURI){var _this=this;var errorPrefix="Could not navigate forward";var targetView=this.viewByURI(targetURI,errorPrefix);var originViewInstanceId=this.layoutState.activeViewInstance;var updateStateFunction=function(){return _this.layoutState.appendView(targetView.id)};return this.navigationPipeline.performNavigation(originViewInstanceId,targetView.id,updateStateFunction,this.transitionFor("forward"))};ConnectedStackNavigationLayoutController.prototype.replace=function(targetURI){var _this=this;var errorPrefix="Could not replace the active view";var targetView=this.viewByURI(targetURI,errorPrefix);var originViewInstanceId=this.activeViewInstance;var originViewId=this.viewInstanceRegistryClient.getViewIdByViewInstance(originViewInstanceId);throwIfReplaceTheSameView(errorPrefix,targetView.id,originViewId);var updateStateFunction=function(){return _this.layoutState.replaceLastView(targetView.id)};return this.navigationPipeline.performNavigation(originViewInstanceId,targetView.id,updateStateFunction,this.transitionFor("replace"))};Object.defineProperty(ConnectedStackNavigationLayoutController.prototype,"transitions",{get:function(){return this.transitionsValue},set:function(transitionsToSet){this.transitionsValue=transitionsToSet},enumerable:true,configurable:true});ConnectedStackNavigationLayoutController.prototype.toRoot=function(){return __awaiter(this,void 0,void 0,(function(){var targetIndex,viewInstances,originViewInstanceId,targetViewInstance,targetViewId,updateStateFunction;var _this=this;return __generator(this,(function(_a){if(this.size===1){return[2,{status:exports.NavigationResultStatus.Complete}]}targetIndex=0;viewInstances=this.layoutState.viewInstances;originViewInstanceId=this.layoutState.activeViewInstance;targetViewInstance=viewInstances[targetIndex];targetViewId=this.viewInstanceRegistryClient.getViewIdByViewInstance(targetViewInstance);updateStateFunction=function(){return _this.layoutState.removeAllViewsAfter(targetViewId)};return[2,this.navigationPipeline.performNavigation(originViewInstanceId,targetViewId,updateStateFunction,this.transitionFor("toRoot"))]}))}))};ConnectedStackNavigationLayoutController.prototype.transitionFor=function(name){var transitions=this.transitions;return transitions?function(transitionContext){return transitions[name](transitionContext)}:this.defaultTransition};ConnectedStackNavigationLayoutController.prototype.viewByIndex=function(viewIndex,errorPrefix){var viewInstances=this.layoutState.viewInstances;if(viewIndex>=0&&viewIndex<viewInstances.length){var viewId=this.viewInstanceRegistryClient.getViewIdByViewInstance(viewInstances[viewIndex]);return this.viewRegistry.getViewById(viewId)}throw viewNotInStackError(errorPrefix)};ConnectedStackNavigationLayoutController.prototype.viewByURI=function(viewURI,errorPrefix){var view=this.viewRegistry.getViewByURI(viewURI);if(view){return view}throw viewNotFoundError$1(errorPrefix,viewURI)};return ConnectedStackNavigationLayoutController}();var STACK_NAVIGATION_LAYOUT_NAME="StackNavigationLayout";var StackNavigationLayoutStateEvent;(function(StackNavigationLayoutStateEvent){StackNavigationLayoutStateEvent["AfterStateChanged"]="AfterStateChanged"})(StackNavigationLayoutStateEvent||(StackNavigationLayoutStateEvent={}));var ConnectedStackNavigationLayoutRenderState=function(){function ConnectedStackNavigationLayoutRenderState(viewRegistry,viewInstanceRegistry,layoutId,layoutState,layoutViewPool){var _this=this;this.viewRegistry=viewRegistry;this.viewInstanceRegistry=viewInstanceRegistry;this.layoutId=layoutId;this.layoutState=layoutState;this.layoutViewPool=layoutViewPool;this.viewInstanceRegistryClient=this.viewInstanceRegistry.createClient("stack-navigation-layout-render-state");this.viewsToRender=this.layoutState.viewInstances.slice();var handleLayoutStateChange=function(){_this.updateRenderTree();_this.updateViewPool()};this.layoutState.on(StackNavigationLayoutStateEvent.AfterStateChanged,handleLayoutStateChange)}ConnectedStackNavigationLayoutRenderState.prototype.viewByViewInstance=function(viewInstanceId){var viewId=this.viewInstanceRegistryClient.getViewIdByViewInstance(viewInstanceId);return this.viewRegistry.getViewById(viewId)};Object.defineProperty(ConnectedStackNavigationLayoutRenderState.prototype,"renderTree",{get:function(){var _this=this;var id=this.layoutId;var name=STACK_NAVIGATION_LAYOUT_NAME;this.updateRenderTree();this.updateViewPool();var tree={views:this.viewsToRender.map((function(viewInstanceId,index){var view=_this.viewByViewInstance(viewInstanceId);var title=view.title;var viewId=view.id;return{index:index,title:title,viewId:viewId,viewInstanceId:viewInstanceId}}))};return{id:id,name:name,tree:tree}},enumerable:true,configurable:true});ConnectedStackNavigationLayoutRenderState.prototype.updateRenderTree=function(){var _this=this;var _a;(_a=this.viewsToRender).push.apply(_a,this.layoutState.viewInstances.filter((function(viewInstanceId){return!_this.viewsToRender.includes(viewInstanceId)})));this.viewsToRender=this.viewsToRender.filter((function(viewToRender){return _this.viewInstanceRegistryClient.hasViewInstance(viewToRender)}))};ConnectedStackNavigationLayoutRenderState.prototype.updateViewPool=function(){var _this=this;var availableViews=this.viewsToRender.filter((function(viewInstanceId){return!_this.layoutState.hasViewInstance(viewInstanceId)}));this.layoutViewPool.setViewInstances(availableViews)};return ConnectedStackNavigationLayoutRenderState}();var createTypeError$3=createTypeErrorFactory("stack-navigation-layout");var throwIfInvalidInitialView$1=function(errorPrefix,viewId){var errors=validateViewId(viewId);if(errors.length>0){throw createTypeError$3(errorPrefix+": The given initial view id is invalid: "+errors[0])}};var throwIfInvalidViewInstanceId$2=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$3(errorPrefix+": "+errors[0])}};var findLast=function(array,callback){var currentIndex=array.length;while(currentIndex--){var arrayItem=array[currentIndex];if(callback(arrayItem,currentIndex)){return arrayItem}}return null};var contains=function(property){return function(list,item){return list.some((function(listItem){return item[property]===listItem[property]}))}};var ConnectedStackNavigationLayoutState=function(){function ConnectedStackNavigationLayoutState(viewInstanceRegistry,layoutViewPool,initialViewId){this.viewInstanceRegistry=viewInstanceRegistry;this.layoutViewPool=layoutViewPool;this.eventEmitter=createEventEmitter("stack-navigation-layout-state");this.viewInstanceRegistryClient=this.viewInstanceRegistry.createClient("stack-layout-state");this.viewInstancesValue=[];var initialViewInstanceInstanceId=this.viewInstanceRegistryClient.createViewInstance(initialViewId);this.viewInstancesValue.push(initialViewInstanceInstanceId)}Object.defineProperty(ConnectedStackNavigationLayoutState.prototype,"activeViewInstance",{get:function(){return this.viewInstances[this.viewInstances.length-1]||null},enumerable:true,configurable:true});Object.defineProperty(ConnectedStackNavigationLayoutState.prototype,"rootView",{get:function(){return this.viewInstances[0]||null},enumerable:true,configurable:true});Object.defineProperty(ConnectedStackNavigationLayoutState.prototype,"viewInstances",{get:function(){return this.viewInstancesValue},enumerable:true,configurable:true});ConnectedStackNavigationLayoutState.prototype.appendView=function(viewId){var viewInstanceId=this.getOrCreateViewInstance(viewId);this.viewInstances.push(viewInstanceId);this.publishStateChange([viewInstanceId],[]);return viewInstanceId};ConnectedStackNavigationLayoutState.prototype.hasViewInstance=function(viewInstanceId){return this.viewInstances.includes(viewInstanceId)};ConnectedStackNavigationLayoutState.prototype.on=function(eventName,eventListener){this.eventEmitter.on(eventName,eventListener)};ConnectedStackNavigationLayoutState.prototype.removeAllViews=function(){return this.removeViews(0)};ConnectedStackNavigationLayoutState.prototype.removeAllViewsAfter=function(viewId){var _this=this;var viewInstanceId=findLast(this.viewInstances,(function(viewToTest){return viewId===_this.viewInstanceRegistryClient.getViewIdByViewInstance(viewToTest)}));this.removeViews(this.viewIndex(viewId)+1);return viewInstanceId};ConnectedStackNavigationLayoutState.prototype.replaceLastView=function(viewId){var lastIndex=this.viewInstances.length-1;var previousView=this.viewInstances[lastIndex];var newView=this.viewInstanceRegistryClient.createViewInstance(viewId);this.viewInstances[lastIndex]=newView;this.viewInstanceRegistryClient.releaseView(previousView);this.publishStateChange([newView],[previousView]);return newView};ConnectedStackNavigationLayoutState.prototype.viewIndex=function(viewId){var _this=this;var viewInstanceId=findLast(this.viewInstances,(function(viewToTest){return viewId===_this.viewInstanceRegistryClient.getViewIdByViewInstance(viewToTest)}));return viewInstanceId?this.viewInstances.indexOf(viewInstanceId):-1};ConnectedStackNavigationLayoutState.prototype.getOrCreateViewInstance=function(viewId){return this.layoutViewPool.instanceFor(viewId)||this.viewInstanceRegistryClient.createViewInstance(viewId)};ConnectedStackNavigationLayoutState.prototype.publishStateChange=function(added,removed){var payload={added:added,removed:removed};this.eventEmitter.emit(StackNavigationLayoutStateEvent.AfterStateChanged,payload)};ConnectedStackNavigationLayoutState.prototype.removeViews=function(fromIndex){var _this=this;var removedViews=this.viewInstances.splice(fromIndex);removedViews.forEach((function(viewToRemove){_this.viewInstanceRegistryClient.releaseView(viewToRemove)}));this.publishStateChange([],removedViews)};return ConnectedStackNavigationLayoutState}();var ConnectedStackNavigationLayoutViewPool=function(){function ConnectedStackNavigationLayoutViewPool(viewInstanceRegistry){this.viewInstanceRegistry=viewInstanceRegistry;this.viewInstanceRegistryClient=this.viewInstanceRegistry.createClient("stack-navigation-layout-view-instance-pool");this.viewInstancePool=new Set}ConnectedStackNavigationLayoutViewPool.prototype.instanceFor=function(viewId){var _this=this;return Array.from(this.viewInstancePool).find((function(viewInstanceId){return viewId===_this.viewInstanceRegistryClient.getViewIdByViewInstance(viewInstanceId)}))||null};ConnectedStackNavigationLayoutViewPool.prototype.setViewInstances=function(views){var _this=this;views.forEach((function(viewInstanceId){return _this.viewInstancePool.add(viewInstanceId)}))};return ConnectedStackNavigationLayoutViewPool}();var makeStackNavigationLayout=function(navigationPipeline,viewRegistry,viewInstanceRegistry){return function(layoutOptions,initialViewId){var layoutErrorPrefix="Could not create a new navigation stack";throwIfInvalidInitialView$1(layoutErrorPrefix,initialViewId);var layoutId="stack-layout-"+generateUid();var layoutViewPool=new ConnectedStackNavigationLayoutViewPool(viewInstanceRegistry);var layoutState=new ConnectedStackNavigationLayoutState(viewInstanceRegistry,layoutViewPool,initialViewId);var layoutRenderState=new ConnectedStackNavigationLayoutRenderState(viewRegistry,viewInstanceRegistry,layoutId,layoutState,layoutViewPool);var layoutController=new ConnectedStackNavigationLayoutController(navigationPipeline,viewRegistry,viewInstanceRegistry,layoutId,layoutState);var clear=function(){return layoutState.removeAllViews()};var getActiveViewInstance=function(){return layoutState.activeViewInstance};var getChildLayoutById=function(){return null};var getChildLayoutByViewInstance=function(){return null};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$2("Could not get the path to the given view",viewInstanceId);return hasViewInstance(viewInstanceId)?[layoutId]:[]};var getName=function(){return STACK_NAVIGATION_LAYOUT_NAME};var getRenderTree=function(){return layoutRenderState.renderTree};var getRootView=function(){return layoutState.rootView};var getSnapshot=function(){return{id:layoutId,views:layoutState.viewInstances.slice()}};var hasViewInstance=function(viewInstanceIdToCheck){throwIfInvalidViewInstanceId$2("Could not check if the stack has the view",viewInstanceIdToCheck);return layoutState.viewInstances.some((function(viewInstanceId){return viewInstanceId===viewInstanceIdToCheck}))};return createAPI({clear:clear,getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,getRootView:getRootView,getSnapshot:getSnapshot,hasViewInstance:hasViewInstance})}};var createError$3=createErrorFactory("tabs-navigation-layout.controller");var createInvalidTabError=function(errorPrefix,uri){return createError$3(errorPrefix+': There is no tab with URI "'+uri+'".')};var ConnectedTabsNavigationLayoutController=function(){function ConnectedTabsNavigationLayoutController(navigationPipeline,layoutId,layoutState){var _this=this;this.navigationPipeline=navigationPipeline;this.layoutId=layoutId;this.layoutState=layoutState;this.defaultTransition=function(){return __awaiter(_this,void 0,void 0,(function(){return __generator(this,(function(_a){console.warn("[tabs-layout.controller] Transitions are not configured");return[2]}))}))};this.transitionsValue=null}Object.defineProperty(ConnectedTabsNavigationLayoutController.prototype,"activeTab",{get:function(){return this.layoutState.activeStackIndex},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutController.prototype,"activeStack",{get:function(){return this.layoutState.activeStack.getController()},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutController.prototype,"id",{get:function(){return this.layoutId},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutController.prototype,"tabs",{get:function(){return this.layoutState.tabs.map((function(tab){return tab.uri}))},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutController.prototype,"transitions",{get:function(){return this.transitionsValue},set:function(transitionsToSet){this.transitionsValue=transitionsToSet},enumerable:true,configurable:true});ConnectedTabsNavigationLayoutController.prototype.select=function(targetURI){var _this=this;var errorPrefix="Could not change the active stack";var tabs=this.layoutState.tabs;var targetView=tabs.find((function(tab){return tab.uri===targetURI}));if(!targetView){throw createInvalidTabError(errorPrefix,targetURI)}var targetViewId=targetView.id;var targetViewIndex=tabs.indexOf(targetView);if(targetViewIndex===this.layoutState.activeStackIndex){return Promise.resolve({status:exports.NavigationResultStatus.Complete})}var originViewInstanceId=this.layoutState.activeViewInstance;var updateStateFunction=function(){_this.layoutState.activeStackIndex=targetViewIndex;return _this.layoutState.activeViewInstance};return this.navigationPipeline.performNavigation(originViewInstanceId,targetViewId,updateStateFunction,this.transitionFor("select"))};ConnectedTabsNavigationLayoutController.prototype.transitionFor=function(name){var transitions=this.transitions;return transitions?function(transitionContext){return transitions[name](transitionContext)}:this.defaultTransition};return ConnectedTabsNavigationLayoutController}();var TABS_NAVIGATION_LAYOUT_NAME="TabsNavigationLayout";var ConnectedTabsNavigationLayoutRenderState=function(){function ConnectedTabsNavigationLayoutRenderState(layoutId,layoutState){this.layoutId=layoutId;this.layoutState=layoutState}Object.defineProperty(ConnectedTabsNavigationLayoutRenderState.prototype,"renderTree",{get:function(){var id=this.layoutId;var name=TABS_NAVIGATION_LAYOUT_NAME;var active=this.layoutState.activeStackIndex;var stacks=this.layoutState.stacks;var tree={active:active,stacks:stacks.map((function(childStack){return childStack.getRenderTree()}))};return{id:id,name:name,tree:tree}},enumerable:true,configurable:true});return ConnectedTabsNavigationLayoutRenderState}();var ConnectedTabsNavigationLayoutState=function(){function ConnectedTabsNavigationLayoutState(stackNavigationLayoutFactory,tabsValue){var _this=this;this.stackNavigationLayoutFactory=stackNavigationLayoutFactory;this.tabsValue=tabsValue;this.stacksValue=this.tabsValue.map((function(tab){return _this.stackNavigationLayoutFactory({},tab.id)}));this.activeStackIndexValue=0}Object.defineProperty(ConnectedTabsNavigationLayoutState.prototype,"activeStack",{get:function(){return this.stacks[this.activeStackIndex]},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutState.prototype,"activeStackIndex",{get:function(){return this.activeStackIndexValue},set:function(stackIndex){this.activeStackIndexValue=stackIndex},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutState.prototype,"activeViewInstance",{get:function(){return this.activeStack.getActiveViewInstance()},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutState.prototype,"stacks",{get:function(){return this.stacksValue},enumerable:true,configurable:true});Object.defineProperty(ConnectedTabsNavigationLayoutState.prototype,"tabs",{get:function(){return this.tabsValue.slice()},enumerable:true,configurable:true});return ConnectedTabsNavigationLayoutState}();var createTypeError$4=createTypeErrorFactory("tabs-navigation-layout");var createViewNotFoundByURIError$1=function(errorPrefix,viewURI){return createTypeError$4(errorPrefix+': Could not find the view by provided URI "'+viewURI+'". '+"Make sure you provide correct URIs in tabs")};var throwIfInvalidLayoutOptions$1=function(errorPrefix,layoutOptions){if(!isArray(layoutOptions.tabs)){throw createTypeError$4(errorPrefix+": The 'tabs' parameter is required. "+"Make sure you provide an array of tabs in the "+"'layoutOptions' when you add 'TabsNavigationLayout'")}};var throwIfInvalidViewInstanceId$3=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$4(errorPrefix+": "+errors[0])}};var makeTabsNavigationLayout=function(navigationPipeline,stackNavigationLayoutFactory,viewRegistry){return function(layoutOptions){var layoutErrorPrefix="Could not create a tabs layout";var tabsLayoutOptions=layoutOptions;throwIfInvalidLayoutOptions$1(layoutErrorPrefix,tabsLayoutOptions);var tabs=tabsLayoutOptions.tabs.map((function(viewURI){var view=viewRegistry.getViewByURI(viewURI);if(!view){throw createViewNotFoundByURIError$1(layoutErrorPrefix,viewURI)}return view}));var layoutId="tabs-layout-"+generateUid();var layoutState=new ConnectedTabsNavigationLayoutState(stackNavigationLayoutFactory,tabs);var layoutRenderState=new ConnectedTabsNavigationLayoutRenderState(layoutId,layoutState);var layoutController=new ConnectedTabsNavigationLayoutController(navigationPipeline,layoutId,layoutState);var getActiveViewInstance=function(){return layoutState.activeViewInstance};var getController=function(){return layoutController};var getId=function(){return layoutId};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$3("Could not get the path to the given view",viewInstanceId);var stackLayout=getChildLayoutByViewInstance(viewInstanceId);if(!stackLayout){return[]}return[layoutId,stackLayout.getId()]};var getName=function(){return TABS_NAVIGATION_LAYOUT_NAME};var getChildLayoutById=function(id){return layoutState.stacks.find((function(childStack){return childStack.getId()===id}))||null};var getChildLayoutByViewInstance=function(viewInstanceId){return layoutState.stacks.find((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))||null};var getRenderTree=function(){return layoutRenderState.renderTree};var hasViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$3("Could not check if the stack has the view",viewInstanceId);return layoutState.stacks.some((function(childStack){return childStack.hasViewInstance(viewInstanceId)}))};return createAPI({getActiveViewInstance:getActiveViewInstance,getChildLayoutById:getChildLayoutById,getChildLayoutByViewInstance:getChildLayoutByViewInstance,getController:getController,getId:getId,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getName:getName,getRenderTree:getRenderTree,hasViewInstance:hasViewInstance})}};var createNavigationError=function(navigationTypeName,message){var createError=createErrorFactory("navigation-type: "+navigationTypeName);return createError("Could not perform navigation: "+message)};var CHANGE_ROOT_NAVIGATION_TYPE_NAME="change-root";var createNavigationTypeChangeRoot=function(navigationState,viewRegistry){return createAPI({name:CHANGE_ROOT_NAVIGATION_TYPE_NAME,navigate:function(origin,target){var supportedLayouts=[MENU_NAVIGATION_LAYOUT_NAME,TABS_NAVIGATION_LAYOUT_NAME];var pathToView=navigationState.getLayoutPathToViewInstance(origin);var tabsOrMenuLayout=pathToView.find((function(layout){return supportedLayouts.includes(layout.getName())}));if(!tabsOrMenuLayout){throw createNavigationError(CHANGE_ROOT_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+CHANGE_ROOT_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with a menu navigation layout or a tabs navigation layout")}var targetView=viewRegistry.getViewById(target);var targetURI=targetView.uri;return tabsOrMenuLayout.getController().select(targetURI)}})};var MODAL_CLOSE_NAVIGATION_TYPE_NAME="modal-close";var createNavigationTypeModalClose=function(navigationState){return createAPI({name:MODAL_CLOSE_NAVIGATION_TYPE_NAME,navigate:function(origin){var targetLayout=navigationState.getLayoutByName(MODALS_NAVIGATION_LAYOUT_NAME);if(!targetLayout){throw createNavigationError(MODAL_CLOSE_NAVIGATION_TYPE_NAME,"Could not find the '"+MODALS_NAVIGATION_LAYOUT_NAME+"' layout. "+"Make sure you add this layout by calling "+"'navigationController.addLayout(MODALS_NAVIGATION_LAYOUT_NAME)'")}var stackToDismiss=targetLayout.getChildLayoutByViewInstance(origin);if(!stackToDismiss){throw createNavigationError(MODAL_CLOSE_NAVIGATION_TYPE_NAME,'The target stack for the view "'+origin+'" was not found')}return targetLayout.getController().dismiss(stackToDismiss.getId())}})};var MODAL_OPEN_NAVIGATION_TYPE_NAME="modal-open";var createNavigationTypeModalOpen=function(navigationState,viewRegistry){return createAPI({name:MODAL_OPEN_NAVIGATION_TYPE_NAME,navigate:function(origin,target){var targetLayout=navigationState.getLayoutByName(MODALS_NAVIGATION_LAYOUT_NAME);if(!targetLayout){throw createNavigationError(MODAL_OPEN_NAVIGATION_TYPE_NAME,"Could not find the '"+MODALS_NAVIGATION_LAYOUT_NAME+"' layout. "+"Make sure you add this layout by calling "+"'navigationController.addLayout(MODALS_NAVIGATION_LAYOUT_NAME)'")}var targetView=viewRegistry.getViewById(target);var targetURI=targetView.uri;return targetLayout.getController().open(origin,targetURI)}})};var POP_NAVIGATION_TYPE_NAME="pop";var createNavigationTypePop=function(navigationState,viewRegistry){return createAPI({name:POP_NAVIGATION_TYPE_NAME,navigate:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(POP_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(POP_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+POP_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}var targetView=viewRegistry.getViewById(target);var targetURI=targetView.uri;return targetStackLayout.getController().back(targetURI)}})};var PUSH_NAVIGATION_TYPE_NAME="push";var createNavigationTypePush=function(navigationState,viewRegistry){return createAPI({name:PUSH_NAVIGATION_TYPE_NAME,navigate:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(PUSH_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(PUSH_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+PUSH_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}var targetView=viewRegistry.getViewById(target);var targetURI=targetView.uri;return targetStackLayout.getController().forward(targetURI)}})};var REPLACE_NAVIGATION_TYPE_NAME="replace";var createNavigationTypeReplace=function(navigationState,viewRegistry){return createAPI({name:REPLACE_NAVIGATION_TYPE_NAME,navigate:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(REPLACE_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(REPLACE_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+REPLACE_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}var targetView=viewRegistry.getViewById(target);var targetURI=targetView.uri;return targetStackLayout.getController().replace(targetURI)}})};var ROOT_NAVIGATION_TYPE_NAME="root";var createNavigationTypeRoot=function(navigationState,viewRegistry,viewInstanceRegistry){var viewInstanceRegistryClient=viewInstanceRegistry.createClient("navigation-type-root");return createAPI({name:ROOT_NAVIGATION_TYPE_NAME,navigate:function(origin,target){var pathToView=navigationState.getLayoutPathToViewInstance(origin);var targetStackLayout=pathToView[pathToView.length-1];if(!targetStackLayout){throw createNavigationError(ROOT_NAVIGATION_TYPE_NAME,'There is no layout that contains the origin view: "'+origin+'"')}if(targetStackLayout.getName()!==STACK_NAVIGATION_LAYOUT_NAME){throw createNavigationError(ROOT_NAVIGATION_TYPE_NAME,'There was an attempt to perform a "'+ROOT_NAVIGATION_TYPE_NAME+'" navigation in a layout '+"that doesn't support it. Make sure you use this navigation type "+"only with stack navigation layouts")}var rootViewInstance=targetStackLayout.getRootView();var rootItem=viewInstanceRegistryClient.getViewIdByViewInstance(rootViewInstance);if(rootItem!==target){throw createNavigationError(ROOT_NAVIGATION_TYPE_NAME,"The target view must match the root view in the stack")}return targetStackLayout.getController().toRoot()}})};var EVENT_NAVIGATION_LAYOUT_TREE_AFTER_LAYOUT_ADDED="NavigationLayoutTree.AfterLayoutAdded";var EVENT_NAVIGATION_PIPELINE_BEFORE_NAVIGATE="NavigationPipeline.BeforeNavigate";var EVENT_NAVIGATION_PIPELINE_AFTER_NAVIGATE="NavigationPipeline.AfterNavigate";var EVENT_NAVIGATION_PIPELINE_BEFORE_TRANSITION_START="NavigationPipeline.BeforeTransitionEnd";var EVENT_NAVIGATION_PIPELINE_AFTER_TRANSITION_END="NavigationPipeline.AfterTransitionEnd";var LifecycleEvent;(function(LifecycleEvent){LifecycleEvent["NavigationDidFinish"]="navigationDidFinish";LifecycleEvent["NavigationWillStart"]="navigationWillStart";LifecycleEvent["RenderTreeDidChange"]="renderTreeDidChange"})(LifecycleEvent||(LifecycleEvent={}));var createLifecycle=function(eventEmitter){var _a;var eventCallbacks=(_a={},_a[LifecycleEvent.NavigationDidFinish]=[],_a[LifecycleEvent.NavigationWillStart]=[],_a[LifecycleEvent.RenderTreeDidChange]=[],_a);var navigationHooks=[];var dispatchLifecycleEvent=function(lifecycleEvent){eventCallbacks[lifecycleEvent].forEach((function(callback){callback()}))};var bindEvents=function(){eventEmitter.on(EVENT_NAVIGATION_LAYOUT_TREE_AFTER_LAYOUT_ADDED,(function(){dispatchLifecycleEvent(LifecycleEvent.RenderTreeDidChange)}));eventEmitter.on(EVENT_NAVIGATION_PIPELINE_BEFORE_NAVIGATE,(function(){dispatchLifecycleEvent(LifecycleEvent.NavigationWillStart)}));eventEmitter.on(EVENT_NAVIGATION_PIPELINE_AFTER_NAVIGATE,(function(){dispatchLifecycleEvent(LifecycleEvent.RenderTreeDidChange)}));eventEmitter.on(EVENT_NAVIGATION_PIPELINE_AFTER_TRANSITION_END,(function(){dispatchLifecycleEvent(LifecycleEvent.RenderTreeDidChange);dispatchLifecycleEvent(LifecycleEvent.NavigationDidFinish)}))};var canNavigate=function(navigationHook){navigationHooks.push(navigationHook)};var getNavigationHooks=function(){return navigationHooks.slice()};var navigationDidFinish=function(callback){eventCallbacks[LifecycleEvent.NavigationDidFinish].push(callback)};var navigationWillStart=function(callback){eventCallbacks[LifecycleEvent.NavigationWillStart].push(callback)};var renderTreeDidChange=function(callback){eventCallbacks[LifecycleEvent.RenderTreeDidChange].push(callback)};bindEvents();return createAPI({canNavigate:canNavigate,getNavigationHooks:getNavigationHooks,navigationDidFinish:navigationDidFinish,navigationWillStart:navigationWillStart,renderTreeDidChange:renderTreeDidChange})};var createError$4=createErrorFactory("navigation-controller");var createNavigationTypeNotFoundError=function(errorPrefix,navigationTypeName){return createError$4(errorPrefix+': The navigation type "'+navigationTypeName+'" is not supported. '+"Make sure you use one of the supported navigation types")};var createNavigationNotPossibleError=function(errorPrefix,origin,target,possibleNavigationTargets){var possibleTargets=possibleNavigationTargets.map((function(targetURI){return"  - "+targetURI})).join("\n");var possibleTargetsMessage=possibleNavigationTargets.length>0?'\n\nPossible targets for the view instance "'+origin+'" are:\n\n'+possibleTargets+"\n\n":'There are no possible targets for view "'+origin+'". ';return createError$4(errorPrefix+": There is no registered navigation "+('to view "'+target+'" from the view "'+origin+'". ')+(""+possibleTargetsMessage)+"Please make sure you have configured possible targets for this view in the portal model.\n")};var createOriginViewNotFoundError=function(errorPrefix,viewInstanceId){return createError$4(errorPrefix+': There are no views associated with the given view instance: "'+viewInstanceId+'"')};var createTargetViewNotFoundError=function(errorPrefix,targetURI){return createError$4(errorPrefix+": There is no target view for: "+targetURI)};var throwIfNavigationAlreadyStarted=function(errorPrefix,navigationStartedFlag){if(navigationStartedFlag){throw createError$4(errorPrefix+": Navigation has already started")}};var throwIfNoLayouts=function(errorPrefix,layouts){if(!layouts.length){throw createError$4(errorPrefix+": The application shell must use at least one layout. "+"Make sure you add a layout by calling 'navigationController.addLayout()' "+"before starting navigation.")}};var _this=undefined;var createNavigationController=function(dependencies){var navigationEvents=dependencies.navigationEvents,navigationGraph=dependencies.navigationGraph,navigationPipeline=dependencies.navigationPipeline,navigationState=dependencies.navigationState,navigationTypeRegistry=dependencies.navigationTypeRegistry,viewInstanceRegistry=dependencies.viewInstanceRegistry,viewRegistry=dependencies.viewRegistry;var viewInstanceRegistryClient=viewInstanceRegistry.createClient("navigation-controller");var navigationStartedFlag=false;var getOriginViewOrThrow=function(originViewInstanceId,errorPrefix){var originViewId=viewInstanceRegistryClient.getViewIdByViewInstance(originViewInstanceId);if(!originViewId){throw createOriginViewNotFoundError(errorPrefix,originViewInstanceId)}return originViewId};var getTargetViewOrThrow=function(targetURI,errorPrefix){var targetView=viewRegistry.getViewByURI(targetURI);if(!targetView){throw createTargetViewNotFoundError(errorPrefix,targetURI)}return targetView};var getNavigationTypeOrThrow=function(origin,target,errorPrefix){var navigationTypeName=navigationGraph.getNavigationType(origin,target);if(navigationTypeName===null){var possibleNavigationTargets=navigationGraph.getPossibleTargets(origin);throw createNavigationNotPossibleError(errorPrefix,origin,target,possibleNavigationTargets)}var navigationType=navigationTypeRegistry.getNavigationTypeByName(navigationTypeName);if(!navigationType){throw createNavigationTypeNotFoundError(errorPrefix,navigationTypeName)}return navigationType};var navigateToView=function(originViewInstanceId,targetViewId){var errorPrefix="Could not perform navigation";var originViewId=getOriginViewOrThrow(originViewInstanceId,errorPrefix);var navigationType=getNavigationTypeOrThrow(originViewId,targetViewId,errorPrefix);return navigationType.navigate(originViewInstanceId,targetViewId)};var navigate=function(origin,targetURI){var errorPrefix="Could not perform navigation";var originViewInstanceId=toViewInstanceId(origin);var targetView=getTargetViewOrThrow(targetURI,errorPrefix);var targetViewId=targetView.id;return navigateToView(originViewInstanceId,targetViewId)};var startNavigation=function(){var errorPrefix="Could not start navigation";var layouts=navigationState.getTopLevelLayouts();throwIfNavigationAlreadyStarted(errorPrefix,navigationStartedFlag);throwIfNoLayouts(errorPrefix,layouts);navigationEvents.initEvents(navigationGraph.getNavigations(),(function(originViewInstanceId,targetViewId){navigateToView(originViewInstanceId,targetViewId)}));var initialViewInstanceId=navigationState.getActiveViewInstance();var activeStack=navigationState.getActiveLayout();var initialTransition=function(transitionContext){return __awaiter(_this,void 0,void 0,(function(){var transitions;return __generator(this,(function(_a){transitions=activeStack.getController().transitions;if(transitions){return[2,transitions.initial(transitionContext)]}return[2]}))}))};navigationStartedFlag=true;return navigationPipeline.performInitialNavigation(initialViewInstanceId,initialTransition)};return createAPI({navigate:navigate,startNavigation:startNavigation})};var createTypeError$5=createTypeErrorFactory("view");var throwIfInvalidViewId=function(errorPrefix,viewId){var errors=validateViewId(viewId);if(errors.length){throw createTypeError$5(errorPrefix+": "+errors[0])}};var throwIfInvalidViewURI=function(errorPrefix,viewURI,viewId){var errors=validateViewURI(viewURI,viewId);if(errors.length){throw createTypeError$5(errorPrefix+": "+errors[0])}};var toViewId=function(viewId){return viewId};var createView=function(id,title,uri){var errorPrefix="Could not create a view";throwIfInvalidViewId(errorPrefix,id);throwIfInvalidViewURI(errorPrefix,uri,id);uri=uri.trim();if(!uri.length){console.warn('[hsdk-app-shell] Invalid view configuration: Expected view "'+id+'" to have a URI of at least one character. '+"Make sure that all views have a unique URI property")}if(uri.startsWith("?")){console.warn('[hsdk-app-shell] Invalid view configuration: The URI of view "'+id+'" starts with a "?".'+'A view URI can\'t start with a "?"')}return{id:toViewId(id),title:title.trim(),uri:uri.split("?")[0]}};var createError$5=createErrorFactory("navigation-events");var throwIfInvalidNavigationEvent=function(errorPrefix,eventName,eventPayload){if(!eventPayload){throw createError$5(errorPrefix+': Event payload for the "'+eventName+'" navigation event is missing')}if(!eventPayload.origin){throw createError$5(errorPrefix+": The 'origin' property is missing in "+('the payload of the "'+eventName+'" navigation event'))}if(validateViewInstanceId(eventPayload.origin).length){throw createError$5(errorPrefix+': The origin "'+eventPayload.origin+'" must be a valid view instance id')}};var createNavigationEvents=function(pubsub){var initEvents=function(navigations,callback){navigations.filter((function(navigation){return navigation.event})).forEach((function(navigation){var navigationEvent=navigation.event;var target=toViewId(navigation.target);var listener=function(eventPayload){throwIfInvalidNavigationEvent("Could not handle a navigation event",navigationEvent,eventPayload);var navigationEventPayload=eventPayload;var origin=navigationEventPayload.origin;callback(origin,target)};pubsub.subscribe(navigationEvent,listener)}))};return{initEvents:initEvents}};var createError$6=createErrorFactory("navigation-graph");var createOriginViewNotFoundError$1=function(errorPrefix,viewId){return createError$6(errorPrefix+': The origin view with id "'+viewId+'" was not found. '+"Make sure this view is added to the application shell first.")};var createNavigationGraph=function(viewRegistry){var navigations=new Map;var getNavigationType=function(origin,target){var navigationFromOrigin=navigations.get(toViewId(origin));if(!navigationFromOrigin){return null}var matchingNavigation=navigationFromOrigin.find((function(navigation){return navigation.origin===origin&&navigation.target===target}));return matchingNavigation?matchingNavigation.type:null};var getPossibleTargets=function(origin){var navigationsFromOrigin=navigations.get(toViewId(origin));if(!navigationsFromOrigin){return[]}return navigationsFromOrigin.filter((function(navigation){return navigation.origin===origin})).map((function(navigation){return navigation.target}))};var getNavigations=function(){var result=[];navigations.forEach((function(navigationsFromOrigin){result.push.apply(result,navigationsFromOrigin)}));return result};var registerNavigation=function(originViewId,targetURI,type,event){var errorPrefix="Could not register navigation";var origin=toViewId(originViewId);if(!viewRegistry.hasView(origin)){throw createOriginViewNotFoundError$1(errorPrefix,origin)}var targetView=viewRegistry.getViewByURI(targetURI);if(!targetView){console.warn("[navigation-graph] Skipped invalid navigation configuration: Could not find a target view with "+('URI "'+targetURI+'". Make sure that the target URI matches ')+"with the URI of one of the views.");return}var target=targetView.id;event=event||null;var newNavigation={event:event,origin:origin,target:target,type:type};if(navigations.has(origin)){var navigationsFromOrigin=navigations.get(origin);var existingNavigation=navigationsFromOrigin.find((function(navigation){return navigation.target===target}));if(existingNavigation){Object.assign(existingNavigation,newNavigation)}else{navigationsFromOrigin.push(newNavigation)}}else{navigations.set(origin,[newNavigation])}};return createAPI({getNavigationType:getNavigationType,getNavigations:getNavigations,getPossibleTargets:getPossibleTargets,registerNavigation:registerNavigation})};var createNavigationHistory=function(navigationState,nativeBackButtonPlugin){var navigateBack=function(){var activeLayout=navigationState.getActiveLayout();var activeLayoutController=activeLayout.getController();activeLayoutController.canGoBack()?activeLayoutController.back():nativeBackButtonPlugin.performNativeBack()};if(nativeBackButtonPlugin){try{nativeBackButtonPlugin.enable((function(){navigateBack()}))}catch(error){console.warn("[application-shell] Could not initialize navigation history. "+"The 'BackButton.enable()' call has failed with the following error: "+(""+error.message))}}};var createError$7=createErrorFactory("navigation-layout-registry");var throwIfInvalidLayoutName=function(errorPrefix,layoutName){if(!isString(layoutName)){throw createError$7(errorPrefix+": Layout name must be a string")}if(!layoutName){throw createError$7(errorPrefix+": Layout name cannot be an empty string")}};var throwIfInvalidLayoutFactory=function(errorPrefix,layoutFactory){if(!isFunction(layoutFactory)){throw createError$7(errorPrefix+": The `layoutFactory` parameter must be a function")}};var throwIfAlreadyRegistered=function(errorPrefix,layoutName,registry){if(registry.has(layoutName)){throw createError$7(errorPrefix+": There is already registered layout with name "+layoutName)}};var createNavigationLayoutRegistry=function(){var registry=new Map;var getLayoutFactory=function(layoutName){var errorPrefix="Could not find a layout";throwIfInvalidLayoutName(errorPrefix,layoutName);return registry.get(layoutName)||null};var getLayoutNameList=function(){return Array.from(registry.keys())};var registerLayoutFactory=function(layoutName,layoutFactory){var errorPrefix="Could not register layout";throwIfInvalidLayoutName(errorPrefix,layoutName);throwIfInvalidLayoutFactory(errorPrefix,layoutFactory);throwIfAlreadyRegistered(errorPrefix,layoutName,registry);registry.set(layoutName,layoutFactory)};return createAPI({getLayoutFactory:getLayoutFactory,getLayoutNameList:getLayoutNameList,registerLayoutFactory:registerLayoutFactory})};var createError$8=createErrorFactory("navigation-layout-tree");var throwIfLayoutNotFound=function(errorPrefix,layout,layoutId){if(!layout){throw createError$8(errorPrefix+': There is no layout with id "'+layoutId+'". '+"Make sure you pass the id of an existing layout.")}};var throwIfUnknownLayout=function(errorPrefix,layoutName,layout,registeredLayouts){if(!layout){var layouts=registeredLayouts.join(", ");throw createError$8(errorPrefix+": There is no registered layout with name '"+layoutName+"'. "+("Please use one of the following layouts: "+layouts))}};var createNavigationLayoutTree=function(eventEmitter,navigationLayoutRegistry,navigationState){var createLayoutInstance=function(layoutFactory,layoutOptions){return layoutFactory(layoutOptions)};var addLayout=function(layoutName,layoutOptions){var errorPrefix="Could not use layout";var layoutFactory=navigationLayoutRegistry.getLayoutFactory(layoutName);var availableLayouts=navigationLayoutRegistry.getLayoutNameList();throwIfUnknownLayout(errorPrefix,layoutName,layoutFactory,availableLayouts);var layout=createLayoutInstance(layoutFactory,layoutOptions);navigationState.addLayout(layout);eventEmitter.emit(EVENT_NAVIGATION_LAYOUT_TREE_AFTER_LAYOUT_ADDED,{});return layout.getController()};var getLayoutController=function(layoutId){var layout=navigationState.getLayoutById(layoutId);throwIfLayoutNotFound("Could not get a layout controller",layout,layoutId);return layout.getController()};return createAPI({addLayout:addLayout,getLayoutController:getLayoutController})};var toPromise=function(value){return Promise.resolve(value)};var awaitTimeout=function(timeout){return new Promise((function(resolve){setTimeout(resolve,timeout)}))};var createError$9=createErrorFactory("navigation-pipeline");var createTypeError$6=createTypeErrorFactory("navigation-pipeline");var createViewIdNotFoundError=function(errorPrefix,viewInstanceId){return createError$9(errorPrefix+': Could not find the view id for view instance "'+viewInstanceId+'".')};var createViewNotFoundError=function(errorPrefix,viewId){return createError$9(errorPrefix+': There is no registered view with id "'+viewId+'".')};var throwFailedTransitionError=function(errorPrefix,error){throw createError$9(errorPrefix+": Transition failed with the following error: \n\n"+error)};var throwIfInvalidNavigateFunction=function(errorPrefix,updateNavigationStateFunction){if(!isFunction(updateNavigationStateFunction)){throw createTypeError$6(errorPrefix+": The first parameter 'navigate' must be of type function")}};var throwIfInvalidViewInstanceId$4=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$6(errorPrefix+": "+errors[0])}};var _this$1=undefined;var createNavigationPipeline=function(eventEmitter,lifecycle,navigationState,renderingStatusController,viewInstanceRegistry,viewRegistry){var viewInstanceRegistryClient=viewInstanceRegistry.createClient("navigation-pipeline");var navigationInProgressFlag=false;var getViewByViewIdOrThrow=function(errorPrefix,viewId){var view=viewRegistry.getViewById(viewId);if(!view){throw createViewNotFoundError(errorPrefix,viewId)}return view};var getViewByViewInstanceIdOrThrow=function(errorPrefix,viewInstanceId){var viewId=viewInstanceRegistryClient.getViewIdByViewInstance(viewInstanceId);if(!viewId){throw createViewIdNotFoundError(errorPrefix,viewInstanceId)}return getViewByViewIdOrThrow(errorPrefix,viewId)};var ifNoActiveNavigation=function(navigationFn){return new Promise((function(resolve){if(navigationInProgressFlag){console.debug("[navigation-controller] Ignore navigation intent: "+"The previous navigation has not finished yet");resolve();return}resolve(navigationFn())}))};var progressToEvent=function(progress){if(progress===NavigationProgress.BeforeNavigate){return EVENT_NAVIGATION_PIPELINE_BEFORE_NAVIGATE}if(progress===NavigationProgress.AfterNavigate){return EVENT_NAVIGATION_PIPELINE_AFTER_NAVIGATE}if(progress===NavigationProgress.BeforeTransitionStart){return EVENT_NAVIGATION_PIPELINE_BEFORE_TRANSITION_START}return EVENT_NAVIGATION_PIPELINE_AFTER_TRANSITION_END};var publishProgressEvent=function(progress,originViewInstance,targetViewInstance){return eventEmitter.emit(progressToEvent(progress),{originViewInstance:originViewInstance,progress:progress,targetViewInstance:targetViewInstance})};var updateNavigationState=function(updateNavigationStateFunction){var targetViewInstance=updateNavigationStateFunction();return targetViewInstance||navigationState.getActiveViewInstance()};var performInitialNavigation=function(target,initialTransition){return renderingStatusController.whenViewInstanceReady(target).then((function(){return toPromise(initialTransition({target:target}))}))};var performNavigation=function(originViewInstanceId,targetViewId,updateNavigationStateFunction,transition){return ifNoActiveNavigation((function(){return __awaiter(_this$1,void 0,void 0,(function(){var errorPrefix,originView,targetView,navigationLifecycleHooks,_i,navigationLifecycleHooks_1,navigationLifecycleHook,canNavigate,_a,targetViewInstanceId,error_1;return __generator(this,(function(_b){switch(_b.label){case 0:errorPrefix="Could not perform navigation";throwIfInvalidViewInstanceId$4(errorPrefix,originViewInstanceId);throwIfInvalidNavigateFunction(errorPrefix,updateNavigationStateFunction);originView=getViewByViewInstanceIdOrThrow(errorPrefix,originViewInstanceId);targetView=targetViewId?getViewByViewIdOrThrow(errorPrefix,targetViewId):null;navigationLifecycleHooks=lifecycle.getNavigationHooks();_i=0,navigationLifecycleHooks_1=navigationLifecycleHooks;_b.label=1;case 1:if(!(_i<navigationLifecycleHooks_1.length))return[3,4];navigationLifecycleHook=navigationLifecycleHooks_1[_i];_a=Boolean;return[4,navigationLifecycleHook({originURI:originView.uri,targetURI:targetView?targetView.uri:null})];case 2:canNavigate=_a.apply(void 0,[_b.sent()]);if(!canNavigate){return[2,{status:exports.NavigationResultStatus.Canceled}]}_b.label=3;case 3:_i++;return[3,1];case 4:viewInstanceRegistryClient.retainView(originViewInstanceId);navigationInProgressFlag=true;publishProgressEvent(NavigationProgress.BeforeNavigate,originViewInstanceId,null);targetViewInstanceId=updateNavigationState(updateNavigationStateFunction);viewInstanceRegistryClient.retainView(targetViewInstanceId);publishProgressEvent(NavigationProgress.AfterNavigate,originViewInstanceId,targetViewInstanceId);publishProgressEvent(NavigationProgress.BeforeTransitionStart,originViewInstanceId,targetViewInstanceId);return[4,renderingStatusController.whenViewInstanceReady(targetViewInstanceId)];case 5:_b.sent();return[4,awaitTimeout(0)];case 6:_b.sent();_b.label=7;case 7:_b.trys.push([7,9,,10]);return[4,toPromise(transition({origin:originViewInstanceId,target:targetViewInstanceId}))];case 8:_b.sent();navigationInProgressFlag=false;viewInstanceRegistryClient.releaseView(originViewInstanceId);viewInstanceRegistryClient.releaseView(targetViewInstanceId);viewInstanceRegistryClient.cleanUp();publishProgressEvent(NavigationProgress.AfterTransitionEnd,originViewInstanceId,targetViewInstanceId);return[3,10];case 9:error_1=_b.sent();navigationInProgressFlag=false;publishProgressEvent(NavigationProgress.AfterTransitionEnd,originViewInstanceId,targetViewInstanceId);throwFailedTransitionError(errorPrefix,error_1);return[3,10];case 10:return[2,{status:exports.NavigationResultStatus.Complete}]}}))}))}))};return createAPI({performInitialNavigation:performInitialNavigation,performNavigation:performNavigation})};var createError$a=createErrorFactory("navigation-state");var createTypeError$7=createTypeErrorFactory("navigation-state");var throwIfDuplicatedLayout=function(errorPrefix,layoutToAdd,layouts){var layoutName=layoutToAdd.getName();var alreadyAdded=Boolean(layouts.find((function(layout){return layout.getName()===layoutName})));if(alreadyAdded){throw createError$a(errorPrefix+": The '"+layoutName+"' layout was already added")}};var throwIfInvalidLayoutId=function(errorPrefix,layoutId){if(!isString(layoutId)||!layoutId.trim().length){throw createError$a(errorPrefix+': The given parameter "'+layoutId+'" is invalid layout id')}};var throwIfInvalidViewInstanceId$5=function(errorPrefix,viewInstanceId){var errors=validateViewInstanceId(viewInstanceId);if(errors.length>0){throw createTypeError$7(errorPrefix+": "+errors[0])}};var createNavigationState=function(){var layouts=[];var addLayout=function(layout){var errorPrefix="Could not add a layout";throwIfDuplicatedLayout(errorPrefix,layout,layouts);layouts.push(layout)};var getActiveLayout=function(){var index=layouts.length;while(index--){var layout=layouts[index];var activeViewInstance=layout.getActiveViewInstance();if(activeViewInstance){return layout.getChildLayoutByViewInstance(activeViewInstance)}}return null};var getActiveViewInstance=function(){var index=layouts.length;while(index--){var layout=layouts[index];var activeViewInstance=layout.getActiveViewInstance();if(activeViewInstance){return activeViewInstance}}return null};var getLayoutById=function(layoutId){throwIfInvalidLayoutId("Could not get a layout by id",layoutId);var index=layouts.length;while(index--){var layout=layouts[index];if(layout.getId()===layoutId){return layout}var childLayout=layout.getChildLayoutById(layoutId);if(childLayout){return childLayout}}return null};var getLayoutByName=function(layoutName){return layouts.find((function(layout){return layout.getName()===layoutName}))||null};var getLayoutPathToViewInstance=function(viewInstanceId){throwIfInvalidViewInstanceId$5("Could not find a layout path to the given view",viewInstanceId);var pathToViewInstance=[];var index=layouts.length;while(index--){var layout=layouts[index];if(layout.hasViewInstance(viewInstanceId)){var path=layout.getLayoutPathToViewInstance(viewInstanceId);pathToViewInstance.push.apply(pathToViewInstance,[layout.getId()].concat(path))}}return pathToViewInstance.map((function(layoutId){return getLayoutById(layoutId)}))};var getTopLevelLayouts=function(){return layouts.slice()};var getRenderTree=function(){var trees=layouts.map((function(layout){return layout.getRenderTree()}));return{layouts:trees}};var getRootLayout=function(){return layouts[0]||null};return createAPI({addLayout:addLayout,getActiveLayout:getActiveLayout,getActiveViewInstance:getActiveViewInstance,getLayoutById:getLayoutById,getLayoutByName:getLayoutByName,getLayoutPathToViewInstance:getLayoutPathToViewInstance,getRenderTree:getRenderTree,getRootLayout:getRootLayout,getTopLevelLayouts:getTopLevelLayouts})};var validateNavigationTypeName=function(navigationTypeName){if(!isString(navigationTypeName)){return["Expected the navigation type "+('to be of type string, but "'+navigationTypeName+'" was given')]}if(navigationTypeName.trim().length===0){return["Expected the navigation type to be a string of at least one character"]}return[]};var validateNavigationTypeFunction=function(navigationTypeFunction){if(!isFunction(navigationTypeFunction)){return["Expected the navigation type function to be a function, "+("but '"+navigationTypeFunction+"' was given")]}return[]};var createError$b=createErrorFactory("navigation-type-registry");var createTypeError$8=createTypeErrorFactory("navigation-type-registry");var throwIfInvalidNavigationType=function(errorPrefix,navigationType){var nameValidationErrors=validateNavigationTypeName(navigationType.name);var functionValidationErrors=validateNavigationTypeFunction(navigationType.navigate);if(nameValidationErrors.length>0){throw createTypeError$8(errorPrefix+": "+nameValidationErrors[0])}if(functionValidationErrors.length>0){throw createTypeError$8(errorPrefix+": "+functionValidationErrors[0])}};var throwIfAlreadyRegistered$1=function(errorPrefix,records,navigationType){if(records.has(navigationType.name)){throw createError$b(errorPrefix+": "+"There is already a navigation type function "+("registered with the name \"'"+navigationType.name+"'\""))}};var createNavigationTypeRegistry=function(){var records=new Map;var getNavigationTypeByName=function(name){var navigationType=records.get(name);if(!navigationType){return null}return navigationType};var registerNavigationType=function(navigationType){var errorPrefix="Could not register a navigation type";throwIfInvalidNavigationType(errorPrefix,navigationType);throwIfAlreadyRegistered$1(errorPrefix,records,navigationType);var name=navigationType.name,navigate=navigationType.navigate;records.set(navigationType.name,{name:name,navigate:navigate})};return createAPI({getNavigationTypeByName:getNavigationTypeByName,registerNavigationType:registerNavigationType})};var createError$c=createErrorFactory("root-navigation");var throwIfTargetNotFound=function(errorPrefix,targetView,link){if(!targetView){throw createError$c(errorPrefix+': No view with uri="'+link.target+'" was found')}};var createRootNavigation=function(viewRegistry){var rootNavigationLinks=[];var addRootNavigationLink=function(link){var targetView=viewRegistry.getViewByURI(link.target);throwIfTargetNotFound("Could not add the root navigation link",targetView,link);rootNavigationLinks.push(link)};var getRootNavigationLinks=function(){return rootNavigationLinks.slice()};return createAPI({addRootNavigationLink:addRootNavigationLink,getRootNavigationLinks:getRootNavigationLinks})};var createRenderTree=function(navigationState){var getRenderTree=function(){return navigationState.getRenderTree()};return createAPI({getRenderTree:getRenderTree})};var createError$d=createErrorFactory("rendering-status-controller");var throwIfInvalidViewInstanceId$6=function(errorPrefix,viewInstanceId){if(!isString(viewInstanceId)){throw createError$d(errorPrefix+": The view reference must be a string")}if(!viewInstanceId){throw createError$d(errorPrefix+": The view reference cannot be an empty string")}};var throwIfViewInstanceNotFound=function(errorPrefix,viewInstanceId,hasViewInstance){if(!hasViewInstance){throw createError$d(errorPrefix+': There is no registered view "'+viewInstanceId+'" in the registry')}};var VIEW_INSTANCE_READY_EVENT="ViewInstanceRegistry.ViewInstanceReady";var createRenderingStatusController=function(viewInstanceRegistry){var eventEmitter=createEventEmitter("rendering-status-controller");var viewInstanceRegistryClient=viewInstanceRegistry.createClient("rendering-status-controller");var registry=new Map;var getOrCreateRecord=function(viewInstanceId){if(!registry.has(viewInstanceId)){registry.set(viewInstanceId,{id:viewInstanceId,rendered:false})}return registry.get(viewInstanceId)};var setViewInstanceReady=function(id){var viewInstanceId=toViewInstanceId(id);var errorPrefix="Could not set the view ready";throwIfInvalidViewInstanceId$6(errorPrefix,viewInstanceId);throwIfViewInstanceNotFound(errorPrefix,viewInstanceId,viewInstanceRegistryClient.hasViewInstance(viewInstanceId));var record=getOrCreateRecord(viewInstanceId);if(!record.rendered){record.rendered=true;eventEmitter.emit(VIEW_INSTANCE_READY_EVENT,{viewInstanceId:viewInstanceId})}};var whenViewInstanceReady=function(id){return new Promise((function(resolve){var errorPrefix="Operation failed";var viewInstanceId=toViewInstanceId(id);throwIfInvalidViewInstanceId$6(errorPrefix,viewInstanceId);throwIfViewInstanceNotFound(errorPrefix,viewInstanceId,viewInstanceRegistryClient.hasViewInstance(viewInstanceId));var record=registry.get(viewInstanceId);if(record&&record.rendered){resolve();return}var viewReadyListener=function(payload){if(viewInstanceId===payload.viewInstanceId){eventEmitter.off(VIEW_INSTANCE_READY_EVENT,viewReadyListener);resolve()}};eventEmitter.on(VIEW_INSTANCE_READY_EVENT,viewReadyListener)}))};return createAPI({setViewInstanceReady:setViewInstanceReady,whenViewInstanceReady:whenViewInstanceReady})};var EVENT_VIEW_REGISTRY_VIEW_DELETED="ViewInstanceRegistry.ViewDeleted";var createError$e=createErrorFactory("view-instance-registry-client");var throwIfInvalidViewInstanceId$7=function(errorPrefix,viewInstanceId){if(!isString(viewInstanceId)){throw createError$e(errorPrefix+": The view reference must be a string")}if(!viewInstanceId){throw createError$e(errorPrefix+": The view reference cannot be an empty string")}};var throwIfInvalidViewId$1=function(errorPrefix,viewId){if(!isString(viewId)){throw createError$e(errorPrefix+": The view reference must be a string")}if(!viewId){throw createError$e(errorPrefix+": The view reference cannot be an empty string")}};var throwIfViewNotFound=function(errorPrefix,viewInstanceId,viewInstanceRegistryRecord){if(!viewInstanceRegistryRecord){throw createError$e(errorPrefix+": There is no registered view `"+viewInstanceId+"` in the registry")}};var makeViewInstanceRegistryClient=function(eventEmitter,registry){return function(clientName){var clientId=clientName+"-"+generateUid();var cleanUp=function(){var hasDeletedViews=false;registry.forEach((function(record,key){if(record.references.length===0){registry.delete(key);hasDeletedViews=true}}));if(hasDeletedViews){eventEmitter.emit(EVENT_VIEW_REGISTRY_VIEW_DELETED,{})}};var createViewInstance=function(viewId){var errorPrefix="Could not register the given view";throwIfInvalidViewId$1(errorPrefix,viewId);var viewInstanceId=toViewInstanceId("view-"+viewId+"-"+generateUid());registry.set(viewInstanceId,{references:[clientId],viewId:viewId,viewInstanceId:viewInstanceId});return viewInstanceId};var getViewIdByViewInstance=function(viewInstanceId){var errorPrefix="Could not find the view for the given view";throwIfInvalidViewInstanceId$7(errorPrefix,viewInstanceId);var record=registry.get(toViewInstanceId(viewInstanceId));return record?record.viewId:null};var hasViewInstance=function(viewInstanceId){return registry.has(viewInstanceId)};var off=function(eventName,listener){eventEmitter.off(eventName,listener)};var on=function(eventName,listener){eventEmitter.on(eventName,listener)};var releaseView=function(viewInstanceId){var errorPrefix="Could not find the view for the given view";throwIfInvalidViewInstanceId$7(errorPrefix,viewInstanceId);var viewInstanceRegistryRecord=registry.get(toViewInstanceId(viewInstanceId));if(viewInstanceRegistryRecord){var references=viewInstanceRegistryRecord.references;var index=references.indexOf(clientId);if(index!==-1){references.splice(index,1)}}};var retainView=function(viewInstanceId){var errorPrefix="Could not retain the view";throwIfInvalidViewInstanceId$7(errorPrefix,viewInstanceId);var viewInstanceRegistryRecord=registry.get(viewInstanceId);throwIfViewNotFound(errorPrefix,viewInstanceId,viewInstanceRegistryRecord);var viewInstanceRegistryRecordIds=viewInstanceRegistryRecord.references;if(!viewInstanceRegistryRecordIds.includes(clientId)){viewInstanceRegistryRecordIds.push(clientId)}};return createAPI({cleanUp:cleanUp,createViewInstance:createViewInstance,getViewIdByViewInstance:getViewIdByViewInstance,hasViewInstance:hasViewInstance,off:off,on:on,releaseView:releaseView,retainView:retainView})}};var createViewInstanceRegistry=function(){var eventEmitter=createEventEmitter("view-instance-registry-client");var registry=new Map;var createClient=makeViewInstanceRegistryClient(eventEmitter,registry);return createAPI({createClient:createClient})};var createViewRegistry=function(){var viewList=[];var containsById=contains("id");var containsByURI=contains("uri");var indexById=new Map;var indexByURI=new Map;var addView=function(id,title,uri){var view=createView(id,title,uri);if(containsById(viewList,view)){console.warn('[view-registry] Could not add the view with id "'+view.id+'". '+"A view with this id was already added.");return}if(view.uri&&containsByURI(viewList,view)){console.warn('[view-registry] Did not add view with URI "'+view.uri+'" to the view registry.'+"A view with this URI was already added.");return}viewList.push(view);indexById.set(view.id,view);if(view.uri){indexByURI.set(view.uri,view)}};var getViewById=function(viewId){return indexById.get(viewId)||null};var getViewByURI=function(viewURI){return indexByURI.get(viewURI)||null};var hasView=function(viewId){return indexById.has(viewId)};return createAPI({addView:addView,getViewById:getViewById,getViewByURI:getViewByURI,hasView:hasView})};var createTypeError$9=createTypeErrorFactory("application-shell");var throwIfInvalidDependencies=function(errorPrefix,dependencies){if(!dependencies.pubsub){throw createTypeError$9(errorPrefix+": Provided dependencies are invalid: "+"pubsub should be provided as a dependency")}};var throwIfInvalidViews=function(errorPrefix,views){if(!Array.isArray(views)){throw createTypeError$9('Expected the views to be an array, but got "'+typeof views+'" instead')}};var createApplicationShell=function(views,rootNavigationLinks,services){var errorPrefix="Could not create application shell";throwIfInvalidViews(errorPrefix,views);throwIfInvalidDependencies(errorPrefix,services);var plugins=services.plugins,pubsub=services.pubsub;var nativeBackButtonPlugin=plugins.BackButton;var viewRegistry=createViewRegistry();var viewInstanceRegistry=createViewInstanceRegistry();views.forEach((function(_a){var id=_a.id,title=_a.title,uri=_a.uri;viewRegistry.addView(id,title,uri)}));var navigationTypeRegistry=createNavigationTypeRegistry();var rootNavigation=createRootNavigation(viewRegistry);rootNavigationLinks.forEach((function(link){return rootNavigation.addRootNavigationLink(link)}));var navigationGraph=createNavigationGraph(viewRegistry);var navigationEvents=createNavigationEvents(pubsub);var navigationLayoutRegistry=createNavigationLayoutRegistry();var navigationState=createNavigationState();var lifecycleEventEmitter=createEventEmitter("lifecycle");var lifecycle=createLifecycle(lifecycleEventEmitter);var navigationLayoutTree=createNavigationLayoutTree(lifecycleEventEmitter,navigationLayoutRegistry,navigationState);var renderingStatusController=createRenderingStatusController(viewInstanceRegistry);var navigationPipeline=createNavigationPipeline(lifecycleEventEmitter,lifecycle,navigationState,renderingStatusController,viewInstanceRegistry,viewRegistry);var stackNavigationLayoutFactory=makeStackNavigationLayout(navigationPipeline,viewRegistry,viewInstanceRegistry);var menuNavigationLayoutFactory=makeMenuNavigationLayout(navigationPipeline,stackNavigationLayoutFactory,viewRegistry);var tabsNavigationLayoutFactory=makeTabsNavigationLayout(navigationPipeline,stackNavigationLayoutFactory,viewRegistry);var modalsNavigationLayoutFactory=makeModalsNavigationLayout(navigationPipeline,stackNavigationLayoutFactory,viewRegistry);navigationLayoutRegistry.registerLayoutFactory(STACK_NAVIGATION_LAYOUT_NAME,stackNavigationLayoutFactory);navigationLayoutRegistry.registerLayoutFactory(MENU_NAVIGATION_LAYOUT_NAME,menuNavigationLayoutFactory);navigationLayoutRegistry.registerLayoutFactory(TABS_NAVIGATION_LAYOUT_NAME,tabsNavigationLayoutFactory);navigationLayoutRegistry.registerLayoutFactory(MODALS_NAVIGATION_LAYOUT_NAME,modalsNavigationLayoutFactory);navigationTypeRegistry.registerNavigationType(createNavigationTypeChangeRoot(navigationState,viewRegistry));navigationTypeRegistry.registerNavigationType(createNavigationTypeModalClose(navigationState));navigationTypeRegistry.registerNavigationType(createNavigationTypeModalOpen(navigationState,viewRegistry));navigationTypeRegistry.registerNavigationType(createNavigationTypePop(navigationState,viewRegistry));navigationTypeRegistry.registerNavigationType(createNavigationTypePush(navigationState,viewRegistry));navigationTypeRegistry.registerNavigationType(createNavigationTypeReplace(navigationState,viewRegistry));navigationTypeRegistry.registerNavigationType(createNavigationTypeRoot(navigationState,viewRegistry,viewInstanceRegistry));var renderTree=createRenderTree(navigationState);var navigationController=createNavigationController({navigationEvents:navigationEvents,navigationGraph:navigationGraph,navigationPipeline:navigationPipeline,navigationState:navigationState,navigationTypeRegistry:navigationTypeRegistry,viewInstanceRegistry:viewInstanceRegistry,viewRegistry:viewRegistry});createNavigationHistory(navigationState,nativeBackButtonPlugin);return createAPI({lifecycle:lifecycle,navigationController:navigationController,navigationGraph:navigationGraph,navigationLayoutTree:navigationLayoutTree,renderTree:renderTree,renderingStatusController:renderingStatusController,rootNavigation:rootNavigation})};exports.CHANGE_ROOT_NAVIGATION_TYPE_NAME=CHANGE_ROOT_NAVIGATION_TYPE_NAME;exports.MENU_NAVIGATION_LAYOUT_NAME=MENU_NAVIGATION_LAYOUT_NAME;exports.MODALS_NAVIGATION_LAYOUT_NAME=MODALS_NAVIGATION_LAYOUT_NAME;exports.MODAL_CLOSE_NAVIGATION_TYPE_NAME=MODAL_CLOSE_NAVIGATION_TYPE_NAME;exports.MODAL_OPEN_NAVIGATION_TYPE_NAME=MODAL_OPEN_NAVIGATION_TYPE_NAME;exports.POP_NAVIGATION_TYPE_NAME=POP_NAVIGATION_TYPE_NAME;exports.PUSH_NAVIGATION_TYPE_NAME=PUSH_NAVIGATION_TYPE_NAME;exports.REPLACE_NAVIGATION_TYPE_NAME=REPLACE_NAVIGATION_TYPE_NAME;exports.ROOT_NAVIGATION_TYPE_NAME=ROOT_NAVIGATION_TYPE_NAME;exports.STACK_NAVIGATION_LAYOUT_NAME=STACK_NAVIGATION_LAYOUT_NAME;exports.TABS_NAVIGATION_LAYOUT_NAME=TABS_NAVIGATION_LAYOUT_NAME;exports.createApplicationShell=createApplicationShell;exports.createEventEmitter=createEventEmitter})(this["@backbase/hsdk-app-shell"]=this["@backbase/hsdk-app-shell"]||{});
