// Generated by Apple Swift version 5.6.1 (swiftlang-5.6.0.323.66 clang-1316.0.20.12)
#ifndef BACKBASEDESIGNSYSTEM_SWIFT_H
#define BACKBASEDESIGNSYSTEM_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <Foundation/Foundation.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(ns_consumed)
# define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
#else
# define SWIFT_RELEASES_ARGUMENT
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility)
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if !defined(IBSegueAction)
# define IBSegueAction
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if __has_feature(modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreGraphics;
@import Foundation;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="BackbaseDesignSystem",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

@class UITraitCollection;
@class NSCoder;

SWIFT_CLASS("_TtC20BackbaseDesignSystem6Avatar")
@interface Avatar : UIView
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC20BackbaseDesignSystem5Badge")
@interface Badge : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




SWIFT_CLASS("_TtC20BackbaseDesignSystem6Button")
@interface Button : UIButton
@property (nonatomic, getter=isEnabled) BOOL enabled;
@property (nonatomic, getter=isHighlighted) BOOL highlighted;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


SWIFT_CLASS("_TtC20BackbaseDesignSystem4Card")
@interface Card : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class NSString;

SWIFT_CLASS("_TtC20BackbaseDesignSystem8Checkbox")
@interface Checkbox : UIButton
/// Boolean to enable/disable the checkbox
@property (nonatomic, getter=isEnabled) BOOL enabled;
/// The natural size for the receiving view, considering only properties of the view itself.
@property (nonatomic, readonly) CGSize intrinsicContentSize;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
- (void)setTitle:(NSString * _Nullable)title forState:(UIControlState)state;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@class UIEvent;

SWIFT_CLASS("_TtC20BackbaseDesignSystem8ChipView")
@interface ChipView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (void)layoutSubviews;
/// Increase the hit area for the <code>removeButton</code> to be 44x44.
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC20BackbaseDesignSystem16CompactDateInput")
@interface CompactDateInput : UIView
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
@property (nonatomic, copy) NSString * _Nullable accessibilityIdentifier;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


/// <code>UIView</code> subclass where the background can be configured using the <code>Gradient</code> object.
SWIFT_CLASS("_TtC20BackbaseDesignSystem22GradientBackgroundView")
@interface GradientBackgroundView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// Returns the class used to create the layer for instances of this class.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) Class _Nonnull layerClass;)
+ (Class _Nonnull)layerClass SWIFT_WARN_UNUSED_RESULT;
/// The bounds rectangle, which describes the view’s location and size in its own coordinate system.
@property (nonatomic) CGRect bounds;
/// Called when the iOS interface environment changes.
/// \param previousTraitCollection The <code>UITraitCollection</code> object before the interface environment changed.
///
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC20BackbaseDesignSystem4Icon") SWIFT_DEPRECATED_MSG("Use 'IconView' instead.")
@interface Icon : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


/// <code>IconButton</code> is a round button showing an icon
SWIFT_CLASS("_TtC20BackbaseDesignSystem10IconButton")
@interface IconButton : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end




/// A view that shows an image, with padding, radius and background. This a replacement of the deprecated <code>Icon</code> component.
/// <ul>
///   <li>
///     to set the background color you should set the <code>backgroundColor</code> property of <code>IconView</code> and not by setting <code>imageView.backgroundColor</code>
///   </li>
///   <li>
///     to set the cornerRadius you should set the <code>cornerRadius</code> property of <code>IconView</code> and not by setting <code>layer.cornerRadius</code>
///   </li>
/// </ul>
/// \code
/// let icon = IconView()
/// icon.backgroundColor = UIColor.orange // Not by doing: icon.imageView.backgroundColor = iconBackgroundColor
/// icon.cornerRadius = 28 // Not by doing: icon.layer.cornerRadius = 28
///
/// \endcode
SWIFT_CLASS("_TtC20BackbaseDesignSystem8IconView")
@interface IconView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end

@class UIImage;

/// <code>UIView</code> subclass where the background can be configured using the <code>UIImage</code> object.
SWIFT_CLASS("_TtC20BackbaseDesignSystem19ImageBackgroundView")
@interface ImageBackgroundView : UIImageView
/// Creates a new instance with the given image
/// \param image optional <code>UIImage</code>
///
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithImage:(UIImage * _Nullable)image highlightedImage:(UIImage * _Nullable)highlightedImage SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Component that creates an alert that can be shown inline.
SWIFT_CLASS("_TtC20BackbaseDesignSystem11InlineAlert")
@interface InlineAlert : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// Dismisses the alert.
- (void)dismiss;
/// Callback to execute when the link button is tapped.
- (void)linkTapped;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




/// error view showing an icon and a label
SWIFT_CLASS("_TtC20BackbaseDesignSystem15InlineErrorView")
@interface InlineErrorView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// Initializer of <code>InlineErrorView</code>
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



/// An input field for monetary amounts which can also display the currency.
/// This components is a stack of a title label, the amount input which contains the input field and the currency label
/// and an inline error view is also stacked below the input to show errors.
SWIFT_CLASS("_TtC20BackbaseDesignSystem11InputAmount")
@interface InputAmount : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class UITextField;

@interface InputAmount (SWIFT_EXTENSION(BackbaseDesignSystem)) <UITextFieldDelegate>
- (void)textFieldDidBeginEditing:(UITextField * _Nonnull)textField;
- (void)textFieldDidChangeSelection:(UITextField * _Nonnull)textField;
- (BOOL)textField:(UITextField * _Nonnull)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString * _Nonnull)string SWIFT_WARN_UNUSED_RESULT;
- (void)textFieldDidEndEditing:(UITextField * _Nonnull)textField;
@end


@class UIViewController;
@class NSBundle;

/// A container view controller that defines a stack-based scheme for navigating hierarchical content.
SWIFT_CLASS("_TtC20BackbaseDesignSystem20NavigationController")
@interface NavigationController : UINavigationController
/// by default uses <code>navigationController</code> style.
- (nonnull instancetype)initWithRootViewController:(UIViewController * _Nonnull)rootViewController OBJC_DESIGNATED_INITIALIZER;
/// by default uses <code>navigationController</code> style.
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
/// by default uses <code>navigationController</code> style.
- (nonnull instancetype)initWithNavigationBarClass:(Class _Nullable)navigationBarClass toolbarClass:(Class _Nullable)toolbarClass OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)aDecoder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
/// Notifies the view controller that its view is about to be added to a view hierarchy.
/// \param animated If true, the view is being added to the window using an animation.
///
- (void)viewWillAppear:(BOOL)animated;
@end


SWIFT_CLASS("_TtC20BackbaseDesignSystem17NotificationBadge")
@interface NotificationBadge : UIView
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




/// Payment card is a view that contains two sides, front and back and it shows the details of the Payment Card
SWIFT_CLASS("_TtC20BackbaseDesignSystem11PaymentCard")
@interface PaymentCard : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end




@interface PaymentCard (SWIFT_EXTENSION(BackbaseDesignSystem))
/// Flip the payment card from one side to another.
/// If <code>canFlip</code> is set to false, this function will not flip the card.
/// by default it will flip with animation defined in <code>flipAnimation</code> and if it is set to nil
/// then the card will flip to the other side without animations.
- (void)flip;
@end



/// The back view of <code>PaymanetCard</code>. It contains the cvv code and a horizontal black stripe
SWIFT_CLASS("_TtC20BackbaseDesignSystem15PaymentCardBack")
@interface PaymentCardBack : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class UIColor;

/// The front view of <code>PaymanetCard</code>. It contains the user name, card information, vendor logos, and bank logo.
SWIFT_CLASS("_TtC20BackbaseDesignSystem16PaymentCardFront")
@interface PaymentCardFront : UIView
/// tintColor will set all the labels and icons colors
@property (nonatomic, strong) UIColor * _Nullable tintColor;
- (void)layoutSubviews;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@interface PaymentCardFront (SWIFT_EXTENSION(BackbaseDesignSystem))
@end



/// The view that is showing on the top middle on the Front of the Payment card.
SWIFT_CLASS("_TtC20BackbaseDesignSystem21PaymentCardStatusView")
@interface PaymentCardStatusView : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS("_TtC20BackbaseDesignSystem17ProgressIndicator")
@interface ProgressIndicator : UIProgressView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


/// A horizontal control that consists of maximum 5 segments, each segment functioning as a discrete button.
/// A segmented control can display a title (String), an image (UIImage object) or both. To customize the selected segment color,
/// use the <code>selectedSegmentTintColor</code> property.
SWIFT_CLASS("_TtC20BackbaseDesignSystem16SegmentedControl")
@interface SegmentedControl : UISegmentedControl
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithItems:(NSArray * _Nullable)items SWIFT_UNAVAILABLE;
@end


/// Separator view to be used as dividers between content and elements
SWIFT_CLASS("_TtC20BackbaseDesignSystem9Separator")
@interface Separator : UIView
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
- (void)layoutSubviews;
@end



/// Use shimmer view to show shimmering effect while waiting for network responses.
/// <ul>
///   <li>
///     <em>Warning</em>: this view is hidden by default, calling its <code>startShimmering</code> method will unhide it.
///   </li>
/// </ul>
SWIFT_CLASS("_TtC20BackbaseDesignSystem11ShimmerView")
@interface ShimmerView : UIView
/// Initializes and returns a newly allocated view object with the specified frame rectangle.
/// \param frame The frame rectangle for the view, measured in points.
///
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
/// An intrinsicContentSize value that controls the size of the view (default is image?.size).
@property (nonatomic, readonly) CGSize intrinsicContentSize;
@end


/// <code>UIView</code> subclass where the background can be configured using the <code>UIColor</code> object.
SWIFT_CLASS("_TtC20BackbaseDesignSystem24SolidColorBackgroundView")
@interface SolidColorBackgroundView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// A view which uses a <code>SummaryStackView</code> to display a certain state (eg. No internet connection, empty search results, etc…).
/// Initialize with an object conforming to <code>StateViewConfiguration</code> and a <code>Style<StateView></code> block.
/// In a configuration, <code>animationView</code> has precedence over <code>iconName</code> which means if both are set,
/// the <code>animationView</code> will be shown, not the icon.
/// Use the style block to set other component styles i.e <code>titleLabelStyle</code>, <code>subtitleLabelStyle</code>, <code>firstButtonStyle</code>,
/// <code>secondButtonStyle</code> and the <code>iconOrAnimationSize</code>.
/// The changing of any of these styles or the <code>iconOrAnimationSize</code> after the StateView initialization will not be applied.
SWIFT_CLASS("_TtC20BackbaseDesignSystem9StateView")
@interface StateView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Generic view row to be added in the <code>SummaryStackView</code> object.
SWIFT_CLASS("_TtC20BackbaseDesignSystem26SummaryStackGenericViewRow")
@interface SummaryStackGenericViewRow : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Icon row to be added in the <code>SummaryStackView</code> object.
SWIFT_CLASS("_TtC20BackbaseDesignSystem19SummaryStackIconRow")
@interface SummaryStackIconRow : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Text row to be added in the <code>SummaryStackView</code> object.
SWIFT_CLASS("_TtC20BackbaseDesignSystem19SummaryStackTextRow")
@interface SummaryStackTextRow : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// Molecule to be able to create a stacked view with either pre-styled rows or icons.
SWIFT_CLASS("_TtC20BackbaseDesignSystem16SummaryStackView")
@interface SummaryStackView : UIStackView
- (nonnull instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


/// A control that offers a binary choice, such as on/off. Subclass of <code>UISwitch</code>.
SWIFT_CLASS("_TtC20BackbaseDesignSystem6Switch")
@interface Switch : UISwitch
@property (nonatomic, getter=isOn) BOOL on;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



/// A container view controller that manages a multiselection interface,
/// where the selection determines which child view controller to display.
SWIFT_CLASS("_TtC20BackbaseDesignSystem16TabBarController")
@interface TabBarController : UITabBarController
/// Called after the controller’s view is loaded into memory.
- (void)viewDidLoad;
/// Notifies the view controller that its view is about to be added to a view hierarchy.
/// \param animated If true, the view is being added to the window using an animation.
///
- (void)viewWillAppear:(BOOL)animated;
- (nonnull instancetype)initWithNibName:(NSString * _Nullable)nibNameOrNil bundle:(NSBundle * _Nullable)nibBundleOrNil OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER;
@end


/// A view that uses UITextView for multiline text input. It has a title, a subtitle, an error message and a character counter.
/// The text view can have a fixed height with scrollable content or dynamic height that adjusts its size according to the content.
/// This class acts as the text view’s delegate in order to enforce the character limit. Alternatively, you might need to set a class
/// of your own as the delegate, in which case you’ll have to enforce the character limit yourself.
SWIFT_CLASS("_TtC20BackbaseDesignSystem8TextArea")
@interface TextArea : UIView
/// Boolean for enabling/disabling the text area. When disabled, <code>disableStyle</code> will be applied.
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end


@class UITextView;

@interface TextArea (SWIFT_EXTENSION(BackbaseDesignSystem)) <UITextViewDelegate>
- (BOOL)textView:(UITextView * _Nonnull)textView shouldChangeTextInRange:(NSRange)range replacementText:(NSString * _Nonnull)text SWIFT_WARN_UNUSED_RESULT;
@end


@class UITouch;

SWIFT_CLASS("_TtC20BackbaseDesignSystem18TextFieldDateInput")
@interface TextFieldDateInput : UIView
@property (nonatomic, readonly, strong) UIView * _Nullable inputView;
@property (nonatomic, readonly, strong) UIView * _Nullable inputAccessoryView;
@property (nonatomic, readonly) BOOL canBecomeFirstResponder;
@property (nonatomic, copy) NSString * _Nullable accessibilityIdentifier;
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder OBJC_DESIGNATED_INITIALIZER SWIFT_UNAVAILABLE;
- (void)touchesBegan:(NSSet<UITouch *> * _Nonnull)touches withEvent:(UIEvent * _Nullable)event;
- (UIView * _Nullable)hitTest:(CGPoint)point withEvent:(UIEvent * _Nullable)event SWIFT_WARN_UNUSED_RESULT;
- (BOOL)becomeFirstResponder;
- (BOOL)resignFirstResponder;
- (void)traitCollectionDidChange:(UITraitCollection * _Nullable)previousTraitCollection;
@end


/// An object that displays an editable text area in your interface.
/// This component has multiple styles, each representing a different state such as: normal, focus, editing, error and disable.
/// Each of these, you can override with your own styles.
SWIFT_CLASS("_TtC20BackbaseDesignSystem9TextInput")
@interface TextInput : UIView
/// A string that identifies the element.
@property (nonatomic, copy) NSString * _Nullable accessibilityIdentifier;
/// A Boolean value that determines whether user events are ignored and removed from the event queue.
@property (nonatomic, getter=isUserInteractionEnabled) BOOL userInteractionEnabled;
- (nonnull instancetype)initWithFrame:(CGRect)frame OBJC_DESIGNATED_INITIALIZER;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)layoutSubviews;
@end














#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#pragma clang diagnostic pop
#endif
