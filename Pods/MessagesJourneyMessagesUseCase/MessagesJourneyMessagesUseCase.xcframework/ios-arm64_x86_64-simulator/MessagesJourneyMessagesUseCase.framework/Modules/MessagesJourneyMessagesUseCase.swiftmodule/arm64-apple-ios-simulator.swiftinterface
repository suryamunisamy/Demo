// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios14.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name MessagesJourneyMessagesUseCase
import Backbase
import ClientCommon
import Foundation
import MessagesClient4
import MessagesClient5
import MessagesJourney
import Swift
import UIKit
import _Concurrency
@_hasMissingDesignatedInitializers public class MessagesJourneyMessagesUseCase : MessagesJourney.MessagesUseCase {
  convenience public init()
  @available(*, deprecated, message: "Use another constructor and new API")
  public init(messageCenterAPI: MessagesClient4.MessagecenterAPIProtocol)
  public init(messageCenterAPI: MessagesClient5.MessagecenterAPIProtocol)
  public func getConversations(request: MessagesJourney.GetConversationsRequest, completion: @escaping GetConversationsHandler)
  public func deleteConversations(_ ids: [Swift.String], completion: DeleteConversationsHandler?)
  public func getConversation(by rootMessageId: Swift.String, completion: @escaping GetConversationHandler)
  public func updateConversationReadStatus(with request: MessagesJourney.ConversationReadStatusRequest, completion: UpdateConversationReadStatusHandler?)
  public func getTopics(completion: @escaping GetTopicsHandler)
  public func composeMessage(composeRequest: MessagesJourney.ComposeRequest, completion: @escaping ComposeMessageHandler)
  public func uploadAttachment(url: Foundation.URL, completion: @escaping UploadAttachmentHandler)
  public func downloadAttachment(by attachmentId: Swift.String, completion: @escaping DownloadAttachmentHandler)
  public func reply(to thread: MessagesJourney.ConversationThread, with replyRequest: MessagesJourney.ReplyRequest, completion: @escaping ComposeMessageHandler)
  public func createDraft(request: MessagesJourney.CreateDraftRequest, completion: @escaping DraftMessageHandler)
  public func updateDraft(request: MessagesJourney.UpdateDraftRequest, completion: @escaping UpdateDraftHandler)
  public func createConversationDraft(request: MessagesJourney.CreateConversationDraftRequest, completion: @escaping DraftMessageHandler)
  public func updateConversationDraft(request: MessagesJourney.UpdateConversationDraftRequest, completion: @escaping UpdateDraftHandler)
  public func getDrafts(request: MessagesJourney.GetDraftsRequest, completion: @escaping RetrieveDraftsHandler)
  public func getDraft(by draftId: Swift.String, completion: @escaping RetrieveDraftHandler)
  public func deleteDrafts(_ ids: [Swift.String], completion: DeleteDraftsHandler?)
  @objc deinit
}
