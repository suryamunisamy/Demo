import { InitialTransition, Transition } from '../../../core/navigation/navigation-layout/navigation-layout.interface';
import { NavigationResult } from '../../../core/navigation/navigation-pipeline/navigation-pipeline.interface';
import { NavigationLayoutController } from '../../../types';
export interface StackNavigationLayoutTransitions {
    back: Transition;
    forward: Transition;
    initial: InitialTransition;
    replace: Transition;
    toRoot: Transition;
}
export interface StackNavigationLayoutController extends NavigationLayoutController {
    activeView: string | null;
    activeViewInstance: string | null;
    back: (targetURI?: string) => Promise<NavigationResult>;
    canGoBack: () => boolean;
    forward: (targetURI: string) => Promise<NavigationResult>;
    replace: (targetURI: string) => Promise<NavigationResult>;
    size: number;
    transitions: StackNavigationLayoutTransitions | null;
    toRoot: () => Promise<NavigationResult>;
    views: Array<string>;
}
